{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","images/ad1.jpg","images/ad2.jpg","images/ad3.jpg","components/Sidebar/Sidebar.js","components/AdminHeader/AdminHeader.js","components/AdminSidebar/AdminSidebar.js","components/FormCollectionDates/FormCollectionDates.js","components/FormUtils/getDateForPostcode.js","components/FormReport/FormReport.js","components/PageContentLanding/PageContentLanding.js","components/PageAbout/PageAbout.js","components/FormManageCollection/FormManageCollection.js","components/PageManageCollection/PageManageCollection.js","components/AdminCollectionRequests/CollectionRequestsData.js","components/DriversListItem/DriversListItem.js","components/AdminDriversList/AdminDriversList.js","components/AdminCollectionRequests/AdminCollectionRequests.js","components/AdminDepotMap/AdminDepotMap.js","components/AdminData/depotList.js","components/AdminData/AdminData.js","components/AdminPostCode/AdminPostCode.js","components/AdminUtils/dbUtils.js","components/AdminCounter/AdminCounter.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","exact","activeClassName","Footer","Date","getFullYear","Sidebar","href","target","rel","src","ad1","alt","ad2","ad3","AdminHeader","AdminSidebar","FormCollectionDates","props","dates1","dates","dates2","length","concat","useState","approvedDate","setApprovedDate","handleRadioData","e","value","formMessage","operation","onSubmit","confirmDate","map","date","n","type","name","id","onChange","checked","htmlFor","getDatesForPostcode","appliances","weighting","collectionDates","FormReport","locationType","setLocationType","inputName","setInputName","inputEmail","setInputEmail","inputAppliance","setInputAppliance","inputHouseNo","setInputHouseNo","inputStreet","setInputStreet","inputTown","setInputTown","inputPostcode","setInputPostcode","inputNotes","setInputNotes","msg","submissionOutcome","setSubmissionOutcome","collectionRequest","setCollectionRequest","clearFormInputs","saveInLocalStorage","request","colReq","localStorage","getItem","JSON","parse","push","setItem","stringify","preventDefault","validation","errorMsg","css","validator","validate","validateForm","collectionId","uuidv4","now","toISOString","substring","replace","datetimeCreated","email","appliance","houseNo","street","town","postcode","notes","errandType","completed","datetimeCompleted","longitude","latitude","driverId","waitingList","assignedDate","showDateForm","hidden","line","i","item","console","log","PageContentLanding","PageAbout","FormManageCollection","inputRef","setInputRef","inputActionType","setInputActionType","ref","placeholder","PageManageCollection","hardcodedRequests","requests","users","permissionLevel","password","DriversListItem","AdminDriversList","storageItems","reverse","hardcodedItems","allItems","todaysDriversItems","AdminCollectionRequests","AdminDepotMap","BING_KEY","process","defaultCenter","defaultZoom","apiKey","height","width","provider","routes","weight","color","opacity","mode","locations","columns","accessor","data","depotName","postCode","fleetSize","AdminData","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","AdminPostCode","useForm","register","handleSubmit","errors","required","postcodeA","postcodeB","defineDatabase","dbName","storeList","a","openDB","upgrade","db","forEach","storeName","objectStoreNames","contains","createObjectStore","writeDatabase","key","tx","transaction","objectStore","store","put","done","fetchDatabase","get","cButton","fontSize","background","minHeight","AdminCounter","loadDB","setLoadDB","count","setCount","prevCounter","handleChange","change","newCount","style","onClick","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0695448.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n        <header>\r\n        <nav className=\"navbar\">\r\n          <div className=\"container\">\r\n            <Link to=\"/\" >&#9851; <span>Let&apos;s Recycle</span></Link>\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/about\" activeClassName=\"active\">About</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/manage-collection\" activeClassName=\"active\">Manage Collection</NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n      <footer>\n      <div className=\"container\">\n        Copyright &copy;  {(new Date().getFullYear())} Let&apos;s Recycle All Rights Reserved\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/ad1.3ac9f89e.jpg\";","export default __webpack_public_path__ + \"static/media/ad2.a97b28cd.jpg\";","export default __webpack_public_path__ + \"static/media/ad3.6719401c.jpg\";","import React from 'react';\nimport ad1 from '../../images/ad1.jpg';\nimport ad2 from '../../images/ad2.jpg';\nimport ad3 from '../../images/ad3.jpg';\nimport './Sidebar.css';\n\nfunction Sidebar() {\n  return (\n        <div className=\"side-column\">\n            <p>\n                <a href=\"https://ao.com\" target=\"_blank\" rel=\"noreferrer\">\n                    <img src={ad1} alt=\"advertisement1\" />\n                </a>\n            </p>\n            <p>\n                <a href=\"https://ao.com\" target=\"_blank\" rel=\"noreferrer\">\n                    <img src={ad2} alt=\"advertisement2\" />\n                </a>\n            </p>\n            <p>\n                <a href=\"https://ao.com\" target=\"_blank\" rel=\"noreferrer\">\n                    <img src={ad3} alt=\"advertisement3\" />\n                </a>\n            </p>\n\n        </div>\n  );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './AdminHeader.css';\n\nfunction AdminHeader() {\n  return (\n        <header>\n            <nav className=\"navbar\">\n              <div className=\"admin-container\">\n                <Link to=\"/\" >&#9851; <span>Let&apos;s Recycle</span></Link>\n              </div>\n            </nav>\n          </header>\n  );\n}\nexport default AdminHeader;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './AdminSidebar.css';\n\nfunction AdminSidebar() {\n  return (\n    <div>\n    <ul className=\"admin-menu\">\n        <li className=\"admin-menu-item\">\n            <NavLink exact to=\"/admin\">Route Data</NavLink>\n        </li>\n        <li className=\"admin-menu-item\">\n            <NavLink to=\"/admin/map\">Depot Map</NavLink>\n        </li>\n        <li className=\"admin-menu-item\">\n            <NavLink to=\"/admin/postcode\">PostCodes</NavLink>\n        </li>\n        <li className=\"admin-menu-item\">\n            <NavLink to=\"/admin/drivers-list\">Driver&apos;s list</NavLink>\n        </li>\n        <li className=\"admin-menu-item\">\n            <NavLink to=\"/admin/counter\">Test Counter</NavLink>\n        </li>\n        <li className=\"admin-menu-item\">\n            <NavLink to=\"/admin/all-requests\">All Collection Requests</NavLink>\n        </li>\n    </ul>\n    </div>\n  );\n}\n\nexport default AdminSidebar;\n","import React, { useState } from 'react';\r\n// import getDatesForPostcode from \"./../FormUtils/getDateForPostcode.js\"\r\n\r\nfunction FormCollectionDates(props) {\r\n  const dates1 = props.dates;\r\n  let dates2 = props.dates;\r\n  if (dates1.length > 0) {\r\n    const clear = ['unselect all'];\r\n    dates2 = dates1.concat(clear);\r\n  }\r\n  // console.log(\"dates=\", dates2);\r\n  const [approvedDate, setApprovedDate] = useState('');\r\n\r\n  const handleRadioData = (e) => {\r\n    // console.log(\"value=\", e.target.value);\r\n    if (e.target.value !== 'unselect all') {\r\n      setApprovedDate(e.target.value);\r\n    } else {\r\n      setApprovedDate('');\r\n    }\r\n  };\r\n  const handleForm = (e) => {\r\n    // console.log(\"date=\", approvedDate);\r\n    props.confirmDate(e, approvedDate);\r\n    setApprovedDate('');\r\n  };\r\n  const formMessage = (props.operation === 'create' ? 'If none of the dates is selected, this request will be cancelled. You can try some other time.' : 'If none of the dates is selected, your current collection date will not be changed.');\r\n\r\n  return (\r\n    <form onSubmit={handleForm}>\r\n      <p><strong>Available collection date(s) listed below. Select one that suits you and confirm.</strong></p>\r\n      <div className=\"form-row\">\r\n        <label>Available Date(s)<br />\r\n          <small>{formMessage}</small>\r\n        </label>\r\n        <div>\r\n          {dates2.map((date, n) => <div key={n}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"approvedDate\"\r\n                id={`dateRadio${n}`}\r\n                onChange={handleRadioData}\r\n                value={date}\r\n                checked={approvedDate === date}\r\n              />\r\n              <label htmlFor={`dateRadio${n}`}>{date}</label>\r\n            </div>)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row text-right\">\r\n        <button type=\"submit\">Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\nexport default FormCollectionDates;\r\n","const getDatesForPostcode = () => {\r\n  const dates = ['2021-03-15', '2021-04-18', '2021-05-20'];\r\n  return dates;\r\n};\r\nexport default getDatesForPostcode;\r\n","import React, { useState } from 'react';\r\nimport './FormReport.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport validator from 'email-validator';\r\nimport FormCollectionDates from '../FormCollectionDates/FormCollectionDates.js';\r\nimport getDatesForPostcode from '../FormUtils/getDateForPostcode.js';\r\n\r\nconst appliances = [\r\n  { id: 'Big Fridge', weighting: '1.0' },\r\n  { id: 'Freezer', weighting: '1.0' },\r\n  { id: 'Washer', weighting: '1.0' },\r\n  { id: 'Small Fridge', weighting: '0.5' },\r\n  { id: 'Dryer', weighting: '0.5' },\r\n  { id: 'Oven', weighting: '0.5' },\r\n];\r\nlet collectionDates = [];\r\nfunction FormReport() {\r\n  const [locationType, setLocationType] = useState({ value: '' });\r\n  const [inputName, setInputName] = useState({ value: '' });\r\n  const [inputEmail, setInputEmail] = useState({ value: '' });\r\n  const [inputAppliance, setInputAppliance] = useState({ value: '' });\r\n  const [inputHouseNo, setInputHouseNo] = useState({ value: '' });\r\n  const [inputStreet, setInputStreet] = useState({ value: '' });\r\n  const [inputTown, setInputTown] = useState({ value: '' });\r\n  const [inputPostcode, setInputPostcode] = useState({ value: '' });\r\n  const [inputNotes, setInputNotes] = useState({ value: '' });\r\n  const [submissionOutcome, setSubmissionOutcome] = useState({ msg: [] });\r\n  const [collectionRequest, setCollectionRequest] = useState({});\r\n\r\n  /* do this on submission??? */\r\n  const handleRadioPublic = (e) => {\r\n    setLocationType({ value: e.target.value });\r\n    setInputName({ value: '' });\r\n    setInputEmail({ value: '' });\r\n  };\r\n  /* Postcode validation that I cant get to work */\r\n  /*   const lookupPostcode = async (code) => {\r\n      const postcodes = require('node-postcodes.io');\r\n      const result = await postcodes.lookup(code);\r\n      return result;\r\n    }\r\n   */\r\n  const validateForm = () => {\r\n    const errorMsg = [];\r\n    // console.log(locationType, inputName, inputEmail, inputAppliance, inputHouseNo,inputStreet, inputTown, inputPostcode, inputNotes);\r\n    if (locationType.value === '') {\r\n      errorMsg.push('Please select Location Type');\r\n      setLocationType({ value: '', css: 'textRed' });\r\n    }\r\n    if (locationType.value === 'private property') {\r\n      if (inputName.value === '') {\r\n        errorMsg.push('Please enter your Forename and Surname.');\r\n        setInputName({ value: '', css: 'borderRed' });\r\n      }\r\n      if (inputEmail.value === '' || validator.validate(inputEmail.value) !== true) {\r\n        errorMsg.push('Please enter a valid Email.');\r\n        setInputEmail({ value: inputEmail.value, css: 'borderRed' });\r\n      }\r\n    }\r\n    if (inputAppliance.value === '') {\r\n      errorMsg.push('Please select Appliance Type.');\r\n      setInputAppliance({ value: '', css: 'borderRed' });\r\n    }\r\n    if (inputHouseNo.value === '') {\r\n      errorMsg.push('Please enter House/Building number.');\r\n      setInputHouseNo({ value: '', css: 'borderRed' });\r\n    }\r\n    if (inputStreet.value === '') {\r\n      errorMsg.push('Please enter Street.');\r\n      setInputStreet({ value: '', css: 'borderRed' });\r\n    }\r\n    if (inputTown.value === '') {\r\n      errorMsg.push('Please enter Town or City.');\r\n      setInputTown({ value: '', css: 'borderRed' });\r\n    }\r\n    if (inputPostcode.value === '') {\r\n      errorMsg.push('Please enter Postcode.');\r\n      setInputPostcode({ value: '', css: 'borderRed' });\r\n    }\r\n    /*     else {\r\n          //function above returns a promise, I deal with it here\r\n          lookupPostcode(inputPostcode.value)\r\n          .then(result => {\r\n              //console.log('result= ', result);\r\n            if(result.status !== 200){\r\n              errorMsg.push(\"Please enter a correct UK postcode.\");\r\n              setInputPostcode({ value: inputPostcode.value, css: \"borderRed\" });\r\n              return errorMsg;\r\n            }\r\n          });\r\n        } */\r\n    // console.log(errorMsg);\r\n    return errorMsg;\r\n  };\r\n\r\n  const clearFormInputs = () => {\r\n    // clear the form inputs\r\n    setLocationType({ value: '' });\r\n    setInputName({ value: '' });\r\n    setInputEmail({ value: '' });\r\n    setInputAppliance({ value: '' });\r\n    setInputHouseNo({ value: '' });\r\n    setInputStreet({ value: '' });\r\n    setInputTown({ value: '' });\r\n    setInputPostcode({ value: '' });\r\n    setInputNotes({ value: '' });\r\n  };\r\n\r\n  const saveInLocalStorage = (request) => {\r\n    let colReq = [];\r\n    // get storage and turn into array\r\n    if (localStorage.getItem('colRequest')) {\r\n      colReq = JSON.parse(localStorage.getItem('colRequest'));\r\n    }\r\n    // add new object in the array\r\n    colReq.push(request);\r\n\r\n    // save new to storage\r\n    localStorage.setItem('colRequest', JSON.stringify(colReq));\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const validation = validateForm(e);\r\n    // there was an error\r\n    if (validation.length > 0) {\r\n      setSubmissionOutcome({ msg: validation, css: 'errorMsg' });\r\n    } else {\r\n      // save request in a state\r\n      const collectionId = uuidv4();\r\n      const now = new Date().toISOString().substring(0, 19).replace('T', ' ');\r\n      setCollectionRequest({\r\n        id: collectionId,\r\n        datetimeCreated: now,\r\n        locationType: locationType.value,\r\n        name: inputName.value,\r\n        email: inputEmail.value,\r\n        appliance: inputAppliance.value,\r\n        houseNo: inputHouseNo.value,\r\n        street: inputStreet.value,\r\n        town: inputTown.value,\r\n        postcode: inputPostcode.value,\r\n        notes: inputNotes.value,\r\n        errandType: 'collection',\r\n        completed: false,\r\n        datetimeCompleted: '0000-00-00 00:00:00',\r\n        longitude: '',\r\n        latitude: '',\r\n        driverId: '',\r\n        waitingList: false,\r\n        assignedDate: '',\r\n      });\r\n      // console.log(collectionRequest);\r\n\r\n      if (locationType.value === 'private property') {\r\n        // get the dates\r\n        collectionDates = getDatesForPostcode(inputPostcode.value);\r\n        // show form if dates not empty\r\n        if (collectionDates.length > 0) {\r\n          setSubmissionOutcome({ msg: [], css: '', showDateForm: true });\r\n\r\n          clearFormInputs();\r\n          return;\r\n        }\r\n        setSubmissionOutcome({ msg: ['Unfortunately there is no available collections for your location. Please try again in 7 days.'], css: 'successMsg' });\r\n\r\n        clearFormInputs();\r\n        return;\r\n      }\r\n      setSubmissionOutcome({ msg: ['Your request was sent.'], css: 'successMsg' });\r\n\r\n      // console.log('success');\r\n      // function above returns a promise, I deal with it here\r\n      /*       lookupPostcode(inputPostcode.value)\r\n            .then(result => {\r\n             // console.log('result= ', result);\r\n              if(result.status === 200){\r\n                setInputPostcode({\r\n                  value: inputPostcode.value,\r\n                  css: \"\",\r\n                  long: result.result.longitude,\r\n                  lat: result.result.latitude\r\n                });\r\n              }\r\n            }); */\r\n      saveInLocalStorage(collectionRequest);\r\n      clearFormInputs();\r\n    }\r\n  };\r\n  // this must be passed to FormDates component\r\n  const confirmDate = (e, approvedDate) => {\r\n    e.preventDefault();\r\n    // console.log(approvedDate);\r\n    if (approvedDate.length > 0) {\r\n      // console.log(approvedDate);\r\n      // console.log(collectionRequest);\r\n      // add date to request\r\n      const request = collectionRequest;\r\n      request.assignedDate = approvedDate;\r\n      console.log(request);\r\n      // save request in the db\r\n      saveInLocalStorage(request);\r\n      setSubmissionOutcome({ msg: [`Your collection is going to be on ${approvedDate}`], css: 'successMsg' });\r\n\r\n      // clear request after saving\r\n      setCollectionRequest({});\r\n    } else {\r\n      setSubmissionOutcome({ msg: [\"You didn't select any date, and your request was aborted. Feel free to try some other time. \"], css: 'successMsg' });\r\n    }\r\n  };\r\n\r\n  // console.log('lorem', submissionOutcome);\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitForm} hidden={!submissionOutcome.showDateForm ? '' : 'hidden'} >\r\n        <p><strong>Fill in the form to request collection of a scrap appliance.</strong></p>\r\n        <div className={submissionOutcome.css}>\r\n          {submissionOutcome.msg.map((line, i) => <span key={i}>{line}</span>)}\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label>Type of location</label>\r\n          <div className={locationType.css} >\r\n            <div className=\"form-check-inline\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"locationType\"\r\n                id=\"inlineRadio1\"\r\n                onChange={handleRadioPublic}\r\n                value=\"public area\"\r\n                checked={locationType.value === 'public area'}\r\n              />\r\n              <label htmlFor=\"inlineRadio1\">Public Area</label>\r\n            </div>\r\n            <div className=\"form-check-inline\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"locationType\"\r\n                id=\"inlineRadio2\"\r\n                value=\"private property\"\r\n                onChange={(e) => setLocationType({ value: e.target.value })}\r\n                checked={locationType.value === 'private property'}\r\n              />\r\n              <label htmlFor=\"inlineRadio2\">Private Property </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div hidden={locationType.value === 'private property' ? '' : 'hidden'} >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"inputName\">Full Name</label>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"inputName\"\r\n                name=\"inputName\"\r\n                onChange={(e) => setInputName({ value: e.target.value })}\r\n                value={inputName.value}\r\n                className={inputName.css}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"inputEmail\"\r\n                name=\"inputEmail\"\r\n                onChange={(e) => setInputEmail({ value: e.target.value })}\r\n                value={inputEmail.value}\r\n                className={inputEmail.css}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputAppliance\">Appliance Type</label>\r\n          <div>\r\n            <select\r\n              id=\"inputAppliance\"\r\n              name=\"appliance\"\r\n              value={inputAppliance.value}\r\n              className={inputAppliance.css}\r\n              onChange={(e) => setInputAppliance({ value: e.target.value })}\r\n            >\r\n              <option value=\"\" key={0}>Select...</option>\r\n              {appliances.map((item, i) => <option value={item.id} key={i + 1}> {item.id} </option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputHouseNo\">House/Building No</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputHouseNo\"\r\n              value={inputHouseNo.value}\r\n              className={inputHouseNo.css}\r\n              onChange={(e) => setInputHouseNo({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputStreet\">Street</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputStreet\"\r\n              value={inputStreet.value}\r\n              className={inputStreet.css}\r\n              onChange={(e) => setInputStreet({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputTown\">Town/City</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputTown\"\r\n              value={inputTown.value}\r\n              className={inputTown.css}\r\n              onChange={(e) => setInputTown({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputPostcode\" >Postcode</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputPostcode\"\r\n              value={inputPostcode.value}\r\n              className={inputPostcode.css}\r\n              onChange={(e) => setInputPostcode({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputNotes\">Notes\r\n          <br /><small>Please describe location in detail. What is parking situation and access to the appliance?</small>\r\n          </label>\r\n          <div className=\"textarea-wrapper\">\r\n            <textarea\r\n              id=\"inputNotes\"\r\n              name=\"inputNotes\"\r\n              value={inputNotes.value}\r\n              className={inputNotes.css}\r\n              onChange={(e) => setInputNotes({ value: e.target.value })}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row text-right\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n      <div hidden={submissionOutcome.showDateForm ? '' : 'hidden'}>\r\n        <FormCollectionDates dates={collectionDates} confirmDate={confirmDate} operation=\"create\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormReport;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FormReport from '../FormReport/FormReport.js';\r\n\r\nfunction PageContentLanding() {\r\n  return (\r\n    <div className=\"main-column\">\r\n      <h1>Report old house appliance</h1>\r\n      <p>We recycle old house appliances. Let us know if you have one at home or spotted one dumped in public area.</p>\r\n      <Link to=\"/about\">Learn more...</Link>\r\n      <FormReport />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageContentLanding;\r\n","import React from 'react';\n\nconst appliances = [\n  { id: 'Big Fridge', weighting: '1.0' },\n  { id: 'Freezer', weighting: '1.0' },\n  { id: 'Washer', weighting: '1.0' },\n  { id: 'Small Fridge', weighting: '0.5' },\n  { id: 'Dryer', weighting: '0.5' },\n  { id: 'Oven', weighting: '0.5' },\n];\nfunction PageAbout() {\n  return (\n        <div className=\"main-column\">\n            <h1>About us</h1>\n            <h2>Who we are and what we do</h2>\n            <p>We are AO.com recycle service. Anyone who wants to get rid of their old house appliance can request that we collect it. We will check if it is possible within next 7 days, and give you possible dates to choose from. If there is no collection available, you can opt in to the waiting list.</p>\n            <h2>Frequently asked questions</h2>\n            <p><strong>What appliances do you accept?</strong><br />\n            Currently we accept the following:\n            <ul>\n            { appliances.map((item) => <li> {item.id} </li>)}\n            </ul>\n\n            </p>\n            <p><strong>What should I do on the collection day?</strong><br />\n            Please put out your appliance in front of your property.\n            </p>\n            <p><strong>What if I need to change/cancel the collection on the agreed date?</strong><br/>\n            You need your collection ID. Go to <a href=\"/manage-collection\">this page</a> and use it to bring your collectin for an edit.</p>\n\n        </div>\n  );\n}\n\nexport default PageAbout;\n","import React, { useState } from 'react';\r\nimport FormCollectionDates from '../FormCollectionDates/FormCollectionDates.js';\r\nimport getDatesForPostcode from '../FormUtils/getDateForPostcode.js';\r\n\r\nlet collectionDates = [];\r\n\r\nfunction FormManageCollection() {\r\n  const [inputRef, setInputRef] = useState({ value: '' });\r\n  const [inputActionType, setInputActionType] = useState({ value: '' });\r\n  const [submissionOutcome, setSubmissionOutcome] = useState({ msg: [] });\r\n  const [collectionRequest, setCollectionRequest] = useState({});\r\n\r\n  const validateForm = () => {\r\n    const errorMsg = [];\r\n    // console.log(locationId);\r\n    if (inputRef.value === '') {\r\n      errorMsg.push('Please enter request ref no.');\r\n      setInputRef({ value: '', css: 'textRed' });\r\n    }\r\n    if (inputActionType.value === '') {\r\n      errorMsg.push('Please select Operation.');\r\n      setInputActionType({ value: '', css: 'textRed' });\r\n    }\r\n    // console.log(errorMsg);\r\n    return errorMsg;\r\n  };\r\n\r\n  const clearFormInputs = () => {\r\n    // clear the form inputs\r\n    setInputActionType({ value: '' });\r\n    setInputRef({ value: '' });\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const validation = validateForm(e);\r\n    // there was an error\r\n    if (validation.length > 0) {\r\n      setSubmissionOutcome({ msg: validation, css: 'errorMsg' });\r\n    } else {\r\n      // get request form the db\r\n      const colReq = { id: '1', ref: '1234', postcode: '123 ABC' };\r\n      setCollectionRequest(colReq);\r\n      // if request not found\r\n      if (inputRef.value !== colReq.ref) {\r\n        setSubmissionOutcome({ msg: ['No request with provided Ref Number was found.'], css: 'errorMsg' });\r\n\r\n        return;\r\n      }\r\n      if (inputActionType.value === 'editDate') {\r\n        // get the dates\r\n        collectionDates = getDatesForPostcode(colReq.postcode);\r\n        // show form if dates not empty\r\n        if (collectionDates.length > 0) {\r\n          setSubmissionOutcome({ msg: [], css: '', showDateForm: true });\r\n\r\n          clearFormInputs();\r\n          return;\r\n        }\r\n        setSubmissionOutcome({ msg: ['Unfortunately there is no available collections for your location. Please try again in 7 days.'], css: 'successMsg' });\r\n\r\n        clearFormInputs();\r\n        return;\r\n      }\r\n      if (inputActionType.value === 'delete') {\r\n        // CODE FOR DELETING REQUEST\r\n\r\n        setSubmissionOutcome({ msg: ['Your collection was deleted.'], css: 'successMsg' });\r\n      }\r\n\r\n      // saveInLocalStorage(collectionRequest);\r\n      clearFormInputs();\r\n    }\r\n  };\r\n\r\n  // this must be passed to FormDates component\r\n  const confirmDate = (e, approvedDate) => {\r\n    e.preventDefault();\r\n    // console.log(approvedDate);\r\n    if (approvedDate.length > 0) {\r\n      // console.log(approvedDate);\r\n      // console.log(collectionRequest);\r\n      // add date to request\r\n      const request = collectionRequest;\r\n      request.assignedDate = approvedDate;\r\n      console.log(request);\r\n      // save request in the db\r\n      // saveInLocalStorage(request);\r\n      setSubmissionOutcome({ msg: [`Your collection date was changed to ${approvedDate}.`], css: 'successMsg' });\r\n\r\n      // clear request after saving\r\n      setCollectionRequest({});\r\n    } else {\r\n      setSubmissionOutcome({ msg: [\"You didn't select any date so your collection date stays as it was before. Feel free to try some other time.\"], css: 'successMsg' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitForm} hidden={!submissionOutcome.showDateForm ? '' : 'hidden'}>\r\n      <div className={submissionOutcome.css}>\r\n          {submissionOutcome.msg.map((line, i) => <span key={i}>{line}</span>)}\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"id\">Collection Ref Number</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputRef\"\r\n              name=\"inputRef\"\r\n              placeholder=\"To test, use Ref No = 1234\"\r\n              className = {inputRef.css}\r\n              value={inputRef.value}\r\n              onChange={(e) => setInputRef({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label>Operation</label>\r\n          <div className={inputActionType.css}>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"inputActionType\"\r\n                id=\"inlineRadio1\"\r\n                value=\"delete\"\r\n                checked={inputActionType.value === 'delete'}\r\n                onChange={(e) => setInputActionType({ value: e.target.value })}\r\n              />\r\n              <label htmlFor=\"inlineRadio1\">Cancel Your Collection</label>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"inputActionType\"\r\n                id=\"inlineRadio2\"\r\n                value=\"editDate\"\r\n                checked={inputActionType.value === 'editDate'}\r\n                onChange={(e) => setInputActionType({ value: e.target.value })}\r\n              />\r\n              <label htmlFor=\"inlineRadio2\">Request Another Collection Date </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row text-right\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n      <div hidden={submissionOutcome.showDateForm ? '' : 'hidden'}>\r\n        <FormCollectionDates dates={collectionDates} confirmDate={confirmDate} operation=\"update\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormManageCollection;\r\n","import React from 'react';\r\nimport FormManageCollection from '../FormManageCollection/FormManageCollection.js';\r\n\r\nfunction PageManageCollection() {\r\n  return (\r\n    <div className=\"main-column\">\r\n      <h1>Manage your collection</h1>\r\n      <p>You are going to need the reference number to access your collection.</p>\r\n      <FormManageCollection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageManageCollection;\r\n","export const hardcodedRequests = {\n  requests: [\n    {\n      id: '234f961d-06a6-4e27-befb-636ea99044d3',\n      datetimeCreated: '2020-12-17',\n      locationType: 'public area',\n      name: 'Lorem Ipsum',\n      email: 'aaa@aa.aa',\n      appliance: 'washing machine',\n      houseNo: '123',\n      street: 'Some St',\n      town: 'Some Town',\n      postcode: 'ST1 2AB',\n      notes: 'in the back alley',\n      errandType: 'collection',\n      completed: true,\n      datetimeCompleted: '0000-00-00 00:00:00',\n      longitude: '',\n      latitude: '',\n      driverId: '',\n      waitingList: false,\n      assignedDate: '',\n    },\n    {\n      id: '456f961d-06a6-4e27-befb-636ea99044d3',\n      datetimeCreated: '2020-12-17',\n      errandType: 'collection',\n      name: 'Dolor Sit Amet',\n      email: 'aaa@aa.aa',\n      houseNo: '45',\n      street: 'Some Other St',\n      town: 'Some Other Town',\n      postcode: 'ST2 3CD',\n      appliance: 'fridge',\n      locationType: 'private property',\n      notes: '',\n      completed: false,\n      datetimeCompleted: '0000-00-00 00:00:00',\n      longitude: '',\n      latitude: '',\n      driverId: '',\n      waitingList: false,\n      assignedDate: '',\n    },\n    {\n      id: '686f961d-06a6-4e27-befb-636ea99044d3',\n      datetimeCreated: '2020-12-17',\n      errandType: 'collection',\n      name: 'John Doe',\n      email: 'aaa@aa.aa',\n      houseNo: '67',\n      street: 'Lorem Ipsum',\n      town: 'Dolor sit amet',\n      postcode: 'ABC 123',\n      appliance: 'dish washer',\n      locationType: 'private property',\n      notes: 'no parking in front',\n      completed: false,\n      datetimeCompleted: '0000-00-00 00:00:00',\n      longitude: '',\n      latitude: '',\n      driverId: '',\n      waitingList: false,\n      assignedDate: '',\n    },\n    {\n      id: '212f961d-06a6-4e27-befb-636ea99044d3',\n      datetimeCreated: '2020-12-18',\n      errandType: 'collection',\n      name: 'Mary Newman',\n      email: 'aaa@aa.aa',\n      houseNo: '89',\n      street: 'Adipiscing',\n      town: 'Consectetur',\n      postcode: 'ABC 123',\n      appliance: 'dish washer',\n      locationType: 'private property',\n      notes: 'no parking in front',\n      completed: false,\n      datetimeCompleted: '0000-00-00 00:00:00',\n      longitude: '',\n      latitude: '',\n      driverId: '',\n      waitingList: false,\n      assignedDate: '',\n    },\n  ],\n  users: [\n    {\n      id: 1,\n      permissionLevel: 'admin',\n      name: 'Dorota',\n      email: 'ccc@cc.cc',\n      password: 'loremipsum',\n    },\n    {\n      id: 2,\n      permissionLevel: 'admin',\n      name: 'Dan',\n      email: 'ddd@dd.dd',\n      password: 'loremipsum',\n    },\n    {\n      id: 3,\n      permissionLevel: 'driver',\n      name: 'Bob',\n      email: 'bbb@bb.bb',\n      password: 'loremipsum',\n    },\n    {\n      id: 4,\n      permissionLevel: 'driver',\n      name: 'Alice',\n      email: 'aaa@aa.aa',\n      password: 'loremipsum',\n    },\n  ],\n};\n\nexport default hardcodedRequests;\n","import React from 'react';\r\nimport './DriversListItem.css';\r\n\r\nfunction DriversListItem(props) {\r\n  return (\r\n        <div className=\"drivers-list-item\">\r\n          <div className= {props.errandType === 'collection' ? 'box-head green' : 'box-head blue'} >\r\n            <span className=\"tick-box-icon\">{props.completed ? '\\u2611' : '\\u2610'}</span>\r\n            {props.houseNo} {props.street}, {props.town}, {props.postcode}\r\n            <span className=\"triangle\">&#9660;</span>\r\n          </div>\r\n          <div className=\"box-body\">\r\n            Reference no: {props.id}\r\n            { props.name !== '' ? <br/> : '' }\r\n            { props.name !== '' ? `Name: ${props.name}` : '' }\r\n            { props.email !== '' ? <br/> : ''}\r\n            { props.email !== '' ? `Email: ${props.email}` : ''}\r\n            <br/>Item: {props.appliance}\r\n            <br/>Location Type: {props.locationType}\r\n            <br/>Notes: {props.notes}\r\n            <br/>Status: {props.completed ? 'completed' : 'not completed'}\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default DriversListItem;\r\n","import React, { useState } from 'react';\nimport { hardcodedRequests } from '../AdminCollectionRequests/CollectionRequestsData.js';\nimport DriversListItem from '../DriversListItem/DriversListItem.js';\n\nfunction AdminDriversList() {\n  let storageItems = [];\n  if (localStorage.getItem('colRequest')) {\n    storageItems = JSON.parse(localStorage.getItem('colRequest'));\n    storageItems = storageItems.reverse();\n  }\n  // console.log(storageItems);\n  const hardcodedItems = hardcodedRequests.requests;\n  const allItems = storageItems.concat(hardcodedItems);\n  // console.log(allItems);\n  const [driversItems] = useState(allItems);\n\n  // get items with todays date and driver's id\n  // const todaysDriversItems = dirversItems.filter(item => item.datetime === \"2020-12-17\" && item.driverId === 3);\n  const todaysDriversItems = driversItems;\n\n  return (\n        <div className=\"main-column\">\n          <h1>Your todays route is listed below.</h1>\n          { todaysDriversItems.map((item) => <DriversListItem\n            key={item.id}\n            id={item.id}\n            name={item.name}\n            email={item.email}\n            houseNo={item.houseNo}\n            street={item.street}\n            town={item.town}\n            postcode={item.postcode}\n            completed={item.completed}\n            errandType={item.errandType}\n            appliance={item.appliance}\n            locationType={item.locationType}\n            notes={item.notes}\n            />)}\n        </div>\n  );\n}\n\nexport default AdminDriversList;\n","import React from 'react';\nimport { hardcodedRequests } from './CollectionRequestsData.js';\n\nfunction AdminCollectionRequests() {\n  let storageItems = [];\n  if (localStorage.getItem('colRequest')) {\n    storageItems = JSON.parse(localStorage.getItem('colRequest'));\n    storageItems = storageItems.reverse();\n  }\n  // console.log(storageItems);\n  const hardcodedItems = hardcodedRequests.requests;\n  const allItems = storageItems.concat(hardcodedItems);\n  // console.log(allItems);\n\n  return (\n        <div className=\"main-column\">\n          <h1>All requests are listed below.</h1>\n          { allItems.map((item) => <p>\n            key: {item.id} <br/>\n            id: {item.id} <br/>\n            name: {item.name} <br/>\n            email: {item.email} <br/>\n            houseNo: {item.houseNo} <br/>\n            street: {item.street} <br/>\n            town: {item.town} <br/>\n            postcode: {item.postcode} <br/>\n            completed: {item.completed} <br/>\n            appliance: {item.appliance} <br/>\n            locationType: {item.locationType} <br/>\n            notes: {item.notes}<br/>\n            errandType: {item.errandType} <br/>\n            completed: {item.completed}<br/>\n            datetimeCompleted: {item.datetimeCompleted}<br/>\n            longitude: {item.longitude}<br/>\n            latitude: {item.latitude}<br/>\n            driverId: {item.driverId}<br/>\n            waitingList: {item.waitingList}<br/>\n            assignedDate: {item.assignedDate}\n            </p>)}\n        </div>\n  );\n}\n\nexport default AdminCollectionRequests;\n","import './AdminDepotMap.css';\nimport React from 'react';\nimport Map from 'devextreme-react/map';\n\nconst AdminDepotMap = () => {\n  const BING_KEY = `${process.env.REACT_APP_BING_API}`;\n\n  const routesData = [{\n    weight: 0.5,\n    color: 'blue',\n    opacity: 1,\n    mode: 'driving',\n    locations: [\n      [53.391139000000000, -3.067504000000000],\n      [53.391535103505300, -3.066025692571600],\n      [53.390091033141000, -3.084635511553780],\n      [53.390450000000000, -3.061096000000000],\n      [53.388854000000000, -3.059628000000000],\n      [53.390031000000000, -3.058588000000000],\n      [53.392692000000000, -3.084654000000000],\n      [53.396637000000000, -3.083837000000000],\n      [53.392981000000000, -3.084496000000000],\n      [53.397496000000000, -3.079317000000000],\n      [53.367750000000000, -3.046028000000000],\n      'Oxton',\n    ],\n  },\n  {\n    weight: 6,\n    color: 'red',\n    opacity: 0.5,\n    mode: 'walking',\n    locations: [\n      [53.391139000000000, -3.067504000000000],\n      [53.391535103505300, -3.066025692571600],\n      [53.390091033141000, -3.084635511553780],\n      [53.390450000000000, -3.061096000000000],\n      [53.388854000000000, -3.059628000000000],\n      [53.390031000000000, -3.058588000000000],\n      [53.392692000000000, -3.084654000000000],\n      [53.396637000000000, -3.083837000000000],\n      [53.392981000000000, -3.084496000000000],\n      [53.397496000000000, -3.079317000000000],\n      [53.367750000000000, -3.046028000000000],\n      'Oxton',\n    ],\n  },\n  ];\n\n  return (\n    <div>\n      <Map\n        defaultCenter={['Prenton', 'Prenton', 'CH43 8TJ']}\n        defaultZoom={14}\n        apiKey={BING_KEY}\n        height={500}\n        width=\"100%\"\n        provider=\"bing\"\n        routes={routesData}\n        // type = \"roadmap\" || \"satellite\" || \"hybrid\"\n        type=\"roadmap\" >\n\n      </Map>\n    </div>\n  );\n};\n\nexport default AdminDepotMap;\n","export const columns = [\n  {\n    Header: 'Depot Name',\n    accessor: 'depotName',\n  },\n  {\n    Header: 'Post Code',\n    accessor: 'postCode',\n  },\n  {\n    Header: 'Fleet Size',\n    accessor: 'fleetSize',\n  },\n];\n\nexport const data = [\n  { depotName: 'Horwich', postCode: 'HO1 8XJ', fleetSize: '26' },\n  { depotName: 'Stockport', postCode: 'M18 7TQ', fleetSize: '13' },\n  { depotName: 'Liverpool', postCode: 'L1 1DA', fleetSize: '15' },\n  { depotName: 'Dumfirmline', postCode: 'KY11 3AE', fleetSize: '11' },\n  { depotName: 'Watford', postCode: 'WD17 1AP', fleetSize: '20' },\n  { depotName: 'Milton Keynes', postCode: 'MK10 1SZ', fleetSize: '23' },\n  { depotName: 'Crewe', postCode: 'CW1 2BS', fleetSize: '14' },\n  { depotName: 'Cardiff', postCode: 'CF10 1BE', fleetSize: '8' },\n  { depotName: 'Southampton', postCode: 'SO14 0AH', fleetSize: '9' },\n  { depotName: 'Wolverhampton', postCode: 'WV1 1HB', fleetSize: '16' },\n  { depotName: 'Brighton', postCode: 'BN41 1HS', fleetSize: '6' },\n  { depotName: 'Southend', postCode: 'SS2 4DY', fleetSize: '8' },\n  { depotName: 'Middlesbrough', postCode: 'TS3 6AF', fleetSize: '23' },\n  { depotName: 'Blackpool', postCode: 'FY3 8DF', fleetSize: '11' },\n  { depotName: 'Derby', postCode: 'DE4 2HE', fleetSize: '25' },\n  { depotName: 'Leeds', postCode: 'LS2 8JS', fleetSize: '18' },\n  { depotName: 'Oldham', postCode: 'OL1 3EG', fleetSize: '5' },\n  { depotName: 'Reading', postCode: 'RG1 3YL', fleetSize: '13' },\n  { depotName: 'Blackburn', postCode: 'BB2 1NA', fleetSize: '19' },\n  { depotName: 'York', postCode: 'YO10 3FQ', fleetSize: '9' },\n];\n\nexport const staticData = {\n  depots: {\n    data: [\n      { depotName: 'Horwich', postCode: 'HO1 8XJ', fleetSize: '26' },\n      { depotName: 'Stockport', postCode: 'M18 7TQ', fleetSize: '13' },\n      { depotName: 'Liverpool', postCode: 'L1 1DA', fleetSize: '15' },\n      { depotName: 'Dumfirmline', postCode: 'KY11 3AE', fleetSize: '11' },\n      { depotName: 'Watford', postCode: 'WD17 1AP', fleetSize: '20' },\n      { depotName: 'Milton Keynes', postCode: 'MK10 1SZ', fleetSize: '23' },\n      { depotName: 'Crewe', postCode: 'CW1 2BS', fleetSize: '14' },\n      { depotName: 'Cardiff', postCode: 'CF10 1BE', fleetSize: '8' },\n      { depotName: 'Southampton', postCode: 'SO14 0AH', fleetSize: '9' },\n      { depotName: 'Wolverhampton', postCode: 'WV1 1HB', fleetSize: '16' },\n      { depotName: 'Brighton', postCode: 'BN41 1HS', fleetSize: '6' },\n      { depotName: 'Southend', postCode: 'SS2 4DY', fleetSize: '8' },\n      { depotName: 'Middlesbrough', postCode: 'TS3 6AF', fleetSize: '23' },\n      { depotName: 'Blackpool', postCode: 'FY3 8DF', fleetSize: '11' },\n      { depotName: 'Derby', postCode: 'DE4 2HE', fleetSize: '25' },\n      { depotName: 'Leeds', postCode: 'LS2 8JS', fleetSize: '18' },\n      { depotName: 'Oldham', postCode: 'OL1 3EG', fleetSize: '5' },\n      { depotName: 'Reading', postCode: 'RG1 3YL', fleetSize: '13' },\n      { depotName: 'Blackburn', postCode: 'BB2 1NA', fleetSize: '19' },\n      { depotName: 'York', postCode: 'YO10 3FQ', fleetSize: '9' },\n    ],\n    headers: [\n      {\n        field: 'depotName',\n        header: 'Depot Name',\n      },\n      {\n        field: 'postCode',\n        header: 'Post Code',\n      },\n      {\n        field: 'fleetSize',\n        header: 'Fleet Size',\n      },\n    ],\n  },\n};\n","import React from 'react';\nimport { useTable } from 'react-table';\nimport { columns, data } from './depotList.js';\n\nimport './AdminData.css';\n\nfunction AdminData() {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n      {headerGroups.map((headerGroup) => (\n        <tr {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map((column) => (\n            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n          ))}\n        </tr>\n      ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n      {rows.map((row) => {\n        prepareRow(row);\n        return (\n          <tr {...row.getRowProps()}>\n            {row.cells.map((cell) => <td {...cell.getCellProps()}>{cell.render('Cell')}</td>)}\n          </tr>\n        );\n      })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default AdminData;\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport './AdminPostCode.css';\r\n\r\nconst AdminPostCode = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  // const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  const onSubmit = (data) => {\r\n    console.log('Data: ', data);\r\n  };\r\n\r\n  // TODO create an inline JSX for input and button\r\n\r\n  return (\r\n    <div>\r\n      <p className = \"admin__title\"> Check Post Code </p>\r\n      <form className=\"admin-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <table className=\"admin-table\">\r\n          <row>\r\n            <td>\r\n                <label className=\"pc-form__label\">Post Code</label>\r\n                <input className=\"pc-form__input\" name=\"postcodeA\" ref={register({ required: true })}/>\r\n                {errors.postcodeA && <span className=\"pc-form__error\">Required</span>}\r\n            </td>\r\n            <td>\r\n                <label className=\"pc-form__label\">Post Code</label>\r\n                <input className=\"pc-form__input\" name=\"postcodeB\" ref={register({ required: true })}/>\r\n                {errors.postcodeB && <span className=\"pc-form__error\">Required</span>}\r\n\r\n            </td>\r\n          </row>\r\n          <input className=\"pc-form__input\" type=\"submit\" />\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPostCode;\r\n","import { openDB } from 'idb';\n\nexport const defineDatabase = async (dbName, storeList) => {\n  const version = 1;\n\n  return openDB(dbName, version, {\n    upgrade(db) {\n      storeList.forEach((storeName) => {\n        if (!db.objectStoreNames.contains(storeName)) {\n          db.createObjectStore(storeName);\n        }\n      });\n    },\n  });\n};\n\nexport const writeDatabase = async (db, storeName, key, value) => {\n  const tx = db.transaction(storeName, 'readwrite');\n  const store = await tx.objectStore(storeName);\n  await store.put(value, key);\n  await tx.done;\n};\n\nexport const fetchDatabase = async (db, storeName, key) => {\n  const tx = db.transaction(storeName, 'readwrite');\n  const store = await tx.objectStore(storeName);\n  const value = await store.get(key);\n  await tx.done;\n  return value;\n};\n","import React, { useState } from 'react';\nimport './AdminCounter.css';\n\nimport { defineDatabase, writeDatabase, fetchDatabase } from '../AdminUtils/dbUtils.js';\n\nconst cButton = {\n  color: '#d1adf3',\n  fontSize: '15px',\n  background: '#524e4e',\n  width: '70px',\n  minHeight: '20px',\n};\n\nconst AdminCounter = () => {\n  const [loadDB, setLoadDB] = useState(false);\n  const [count, setCount] = useState(0);\n\n  if (!loadDB) {\n    // load stored data from indexDB only once\n    setLoadDB(true);\n\n    (async () => {\n      const db = await defineDatabase('letsRecycle', ['sequences']);\n      const prevCounter = await fetchDatabase(db, 'sequences', 'counter');\n\n      if (prevCounter) {\n        setCount(prevCounter);\n      } else {\n        await writeDatabase(db, 'sequences', 'counter', count);\n      }\n    })();\n  }\n\n  const handleChange = (change) => {\n    (async () => {\n      let newCount = count + change;\n\n      if (change === 0) {\n        newCount = 0;\n      }\n\n      const db = await defineDatabase('letsRecycle', ['sequences']);\n      await writeDatabase(db, 'sequences', 'counter', newCount);\n\n      setCount(newCount);\n    })();\n  };\n\n  return (\n    <div>\n      <span>\n        <button style={cButton} onClick={() => handleChange(-1)}>-</button>\n        <button style={cButton} onClick= {() => handleChange(1)}>+</button>\n        <button style={cButton} onClick={() => handleChange(0)}>Reset</button>\n        <h2> {count} </h2>\n      </span>\n\n    </div>\n  );\n};\n\nexport default AdminCounter;\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nimport Header from './components/Header/Header.js';\r\nimport Footer from './components/Footer/Footer.js';\r\nimport Sidebar from './components/Sidebar/Sidebar.js';\r\nimport AdminHeader from './components/AdminHeader/AdminHeader.js';\r\nimport AdminSidebar from './components/AdminSidebar/AdminSidebar.js';\r\nimport PageContentLanding from './components/PageContentLanding/PageContentLanding.js';\r\nimport PageAbout from './components/PageAbout/PageAbout.js';\r\nimport PageManageCollection from './components/PageManageCollection/PageManageCollection.js';\r\nimport AdminDriversList from './components/AdminDriversList/AdminDriversList.js';\r\nimport AdminCollectionRequests from './components/AdminCollectionRequests/AdminCollectionRequests.js';\r\nimport AdminDepotMap from './components/AdminDepotMap/AdminDepotMap.js';\r\nimport AdminData from './components/AdminData/AdminData.js';\r\nimport AdminPostCode from './components/AdminPostCode/AdminPostCode.js';\r\nimport AdminCounter from './components/AdminCounter/AdminCounter.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <PageContentLanding />\r\n              <Sidebar />\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <Header />\r\n            <div className=\"container\">\r\n                <PageAbout />\r\n              <Sidebar />\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/manage-collection\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <PageManageCollection />\r\n              <Sidebar />\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          {/* admin  */}\r\n          <Route exact path=\"/admin\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                <AdminData />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/drivers-list\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminDriversList />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/all-requests\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminCollectionRequests />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/map\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminDepotMap />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n\r\n          <Route path=\"/admin/postcode\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminPostCode />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/counter\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminCounter/>\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}