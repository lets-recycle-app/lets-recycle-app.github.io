{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","images/ad1.jpg","images/ad2.jpg","images/ad3.jpg","components/Sidebar/Sidebar.js","components/AdminHeader/AdminHeader.js","components/AdminSidebar/AdminSidebar.js","components/FormReport/FormReport.js","components/PageContentLanding/PageContentLanding.js","components/PageAbout/PageAbout.js","components/DriversListItem/DriversListItem.js","components/AdminCollectionRequests/CollectionRequestsData.js","components/AdminDriversList/AdminDriversList.js","components/AdminCollectionRequests/AdminCollectionRequests.js","components/AdminDepotMap/AdminDepotMap.js","components/AdminUtils/dbUtils.js","components/AdminData/AdminData.js","components/AdminPostCode/AdminPostCode.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","activeClassName","Footer","Date","getFullYear","Sidebar","href","target","rel","src","ad1","alt","ad2","ad3","AdminHeader","AdminSidebar","exact","appliances","FormReport","useState","value","locationType","setLocationType","inputName","setInputName","inputEmail","setInputEmail","inputAppliance","setInputAppliance","inputHouseNo","setInputHouseNo","inputStreet","setInputStreet","inputTown","setInputTown","inputPostcode","setInputPostcode","inputNotes","setInputNotes","msg","messageOnSubmit","setMessageOnSubmit","onSubmit","e","preventDefault","validation","errorMsg","push","css","validator","require","validate","validateForm","length","collectionId","uuidv4","strCollection","collectionRequest","id","datetimeCreated","toISOString","substring","replace","name","email","appliance","houseNo","street","town","postcode","notes","errandType","completed","datetimeCompleted","longitude","latitude","driverId","waitingList","assignedDate","console","log","colReq","localStorage","getItem","JSON","parse","setItem","stringify","map","line","type","onChange","checked","htmlFor","hidden","item","PageContentLanding","PageAbout","DriversListItem","props","hardcodedRequests","AdminDriversList","storageItems","reverse","hardcodedItems","allItems","concat","dirversItems","todaysDriversItems","AdminCollectionRequests","AdminDepotMap","BING_KEY","process","REACT_APP_BING_API","defaultCenter","defaultZoom","apiKey","height","width","provider","routes","weight","color","opacity","mode","locations","defineDatabase","dbName","storeList","a","openDB","upgrade","db","forEach","storeName","objectStoreNames","contains","createObjectStore","writeDatabase","key","tx","transaction","objectStore","store","put","done","fetchDatabase","get","cButton","fontSize","background","minHeight","AdminData","loadDB","setLoadDB","count","setCount","prevCounter","handleChange","change","newCount","style","onClick","data","isAddressRequired","Address","AdminPostCode","visible","setVisible","checkBoxOptions","useMemo","text","onValueChanged","addressOptions","placeholder","maxLength","formData","dataField","editorType","editorOptions","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.598ded05.chunk.js","sourcesContent":["import \"./Header.css\";\nimport {Link, NavLink} from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <header>\n        <nav className=\"navbar\">\n          <div className=\"container\">\n            <Link to=\"/\" >&#9851; <span>Let's Recycle</span></Link>\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <NavLink to=\"/\" activeClassName=\"active\">Home</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to=\"/about\" activeClassName=\"active\">About</NavLink>\n              </li>\n{/*               <li className=\"nav-item\">\n                <NavLink to=\"/admin\" activeClassName=\"active\">Admin</NavLink>\n              </li> */}\n            </ul>\n          </div>\n        </nav>\n      </header>\n    );\n}\n\nexport default Header;","import './Footer.css';\r\nfunction Footer() {\r\n    return (\r\n      <footer>\r\n      <div className=\"container\">\r\n        Copyright &copy;  {(new Date().getFullYear())} Let's Recycle All Rights Reserved\r\n      </div>\r\n    </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/ad1.3ac9f89e.jpg\";","export default __webpack_public_path__ + \"static/media/ad2.a97b28cd.jpg\";","export default __webpack_public_path__ + \"static/media/ad3.6719401c.jpg\";","import ad1 from '../../images/ad1.jpg';\nimport ad2 from '../../images/ad2.jpg';\nimport ad3 from '../../images/ad3.jpg';\nimport './Sidebar.css';\n\nfunction Sidebar() {\n    return (\n        <div className=\"side-column\">\n            <p>\n                <a href=\"https://ao.com\" target=\"_blank\" rel=\"noreferrer\">\n                    <img src={ad1} alt=\"advertisement1\" />\n                </a>\n            </p>\n            <p>\n                <a href=\"https://ao.com\" target=\"_blank\" rel=\"noreferrer\">\n                    <img src={ad2} alt=\"advertisement2\" />\n                </a>\n            </p>\n            <p>\n                <a href=\"https://ao.com\" target=\"_blank\" rel=\"noreferrer\">\n                    <img src={ad3} alt=\"advertisement3\" />\n                </a>\n            </p>\n\n        </div>\n    );\n}\n\nexport default Sidebar;","import {Link} from \"react-router-dom\";\r\nimport './AdminHeader.css';\r\n\r\nfunction AdminHeader() {\r\nreturn (\r\n        <header>\r\n            <nav className=\"navbar\">\r\n              <div className=\"admin-container\">\r\n                <Link to=\"/\" >&#9851; <span>Let's Recycle</span></Link>\r\n              </div>\r\n            </nav>\r\n          </header>\r\n);\r\n}\r\nexport default AdminHeader;","import {NavLink} from \"react-router-dom\";\r\nimport \"./AdminSidebar.css\";\r\n\r\nfunction AdminSidebar() {\r\n    return (\r\n    <div className=\"side-column\">\r\n    <ul className=\"admin-menu\">\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink exact to=\"/admin\">Route Data</NavLink>\r\n        </li>\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink to=\"/admin/map\">Depot Map</NavLink>\r\n        </li>\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink to=\"/admin/postcode\">PostCodes</NavLink>\r\n        </li>\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink to=\"/admin/drivers-list\">Driver's list</NavLink>\r\n        </li>\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink to=\"/admin/all-requests\">All Collection Requests</NavLink>\r\n        </li>\r\n    </ul>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default AdminSidebar;","import \"./FormReport.css\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst appliances = [\n  {\"id\": \"Big Fridge\", \"weighting\": \"1.0\"},\n  {\"id\": \"Freezer\", \"weighting\": \"1.0\"},\n  {\"id\": \"Washer\", \"weighting\": \"1.0\"},\n  {\"id\": \"Small Fridge\", \"weighting\": \"0.5\"},\n  {\"id\": \"Dryer\", \"weighting\": \"0.5\"},\n  {\"id\": \"Oven\", \"weighting\": \"0.5\"}\n];\n\nfunction FormReport() {\n  const [locationType, setLocationType] = useState({ value: \"\" });\n  const [inputName, setInputName] = useState({ value: \"\" });\n  const [inputEmail, setInputEmail] = useState({ value: \"\" });\n  const [inputAppliance, setInputAppliance] = useState({ value: \"\" });\n  const [inputHouseNo, setInputHouseNo] = useState({ value: \"\" });\n  const [inputStreet, setInputStreet] = useState({ value: \"\" });\n  const [inputTown, setInputTown] = useState({ value: \"\" });\n  const [inputPostcode, setInputPostcode] = useState({ value: \"\" });\n  const [inputNotes, setInputNotes] = useState({ value: \"\" });\n  const [messageOnSubmit, setMessageOnSubmit] = useState({msg: []});\n\n  /* do this on submission??? */\n  const handleRadioPublic = e => {\n    setLocationType({ value: e.target.value });\n    setInputName({ value: \"\" });\n    setInputEmail({ value: \"\" });\n  }\n/* Postcode validation that I cant get to work */\n/*   const lookupPostcode = async (code) => {\n    const postcodes = require('node-postcodes.io');\n    const result = await postcodes.lookup(code);\n    return result;\n  }\n */\n  const validateForm = e => {\n    let errorMsg = [];\n    //console.log(locationType, inputName, inputEmail, inputAppliance, inputHouseNo,inputStreet, inputTown, inputPostcode, inputNotes);\n    if (locationType.value === \"\") {\n      errorMsg.push(\"Please select Location Type\");\n      setLocationType({ value: \"\", css: \"textRed\" });\n    }\n    if (locationType.value === \"private property\") {\n      if (inputName.value === \"\") {\n        errorMsg.push(\"Please enter your Forename and Surname.\");\n        setInputName({ value: \"\", css: \"borderRed\" });\n      }\n      var validator = require(\"email-validator\");\n      if (inputEmail.value === \"\" || validator.validate(inputEmail.value) !== true) {\n        errorMsg.push(\"Please enter a valid Email.\");\n        setInputEmail({ value: inputEmail.value, css: \"borderRed\" });\n      }\n    }\n    if (inputAppliance.value === \"\") {\n      errorMsg.push(\"Please select Appliance Type.\");\n      setInputAppliance({ value: \"\", css: \"borderRed\" });\n    }\n    if (inputHouseNo.value === \"\") {\n      errorMsg.push(\"Please enter House/Building number.\");\n      setInputHouseNo({ value: \"\", css: \"borderRed\" });\n    }\n    if (inputStreet.value === \"\") {\n      errorMsg.push(\"Please enter Street.\");\n      setInputStreet({ value: \"\", css: \"borderRed\" });\n    }\n    if (inputTown.value === \"\") {\n      errorMsg.push(\"Please enter Town or City.\");\n      setInputTown({ value: \"\", css: \"borderRed\" });\n    }\n    if (inputPostcode.value === \"\") {\n      errorMsg.push(\"Please enter Postcode.\");\n      setInputPostcode({ value: \"\", css: \"borderRed\" });\n    } \n/*     else {\n      //function above returns a promise, I deal with it here\n      lookupPostcode(inputPostcode.value)\n      .then(result => {\n          //console.log('result= ', result);\n        if(result.status !== 200){\n          errorMsg.push(\"Please enter a correct UK postcode.\");\n          setInputPostcode({ value: inputPostcode.value, css: \"borderRed\" });\n          return errorMsg;\n        }\n      });\n    } */\n    //console.log(errorMsg);\n    return errorMsg;\n  }\n\n  const submitForm = e => {\n    e.preventDefault();\n    let validation = validateForm(e);\n    //there was an error\n    if (validation.length > 0) {\n      setMessageOnSubmit({msg: validation, css: \"errorMsg\"});\n    } else {\n      let collectionId = uuidv4();\n\n      let strCollection = (locationType.value === \"private property\" ? \"Your collection ID is: \" + collectionId + \". Please keep it to manage your collection.\" : \"\");\n\n      setMessageOnSubmit({msg: [\"Your request was sent. \" + strCollection], css: \"successMsg\"});\n      //console.log('success');\n      //function above returns a promise, I deal with it here\n/*       lookupPostcode(inputPostcode.value)\n      .then(result => {\n       // console.log('result= ', result);\n        if(result.status === 200){\n          setInputPostcode({ \n            value: inputPostcode.value, \n            css: \"\", \n            long: result.result.longitude,\n            lat: result.result.latitude\n          });\n        } \n      });*/\n\n      let now = new Date().toISOString().substring(0, 19).replace(\"T\", \" \");\n      const collectionRequest = {\n        id: collectionId,\n        datetimeCreated: now,\n        locationType: locationType.value,\n        name: inputName.value,\n        email: inputEmail.value,\n        appliance: inputAppliance.value,\n        houseNo: inputHouseNo.value,\n        street: inputStreet.value,\n        town: inputTown.value,\n        postcode: inputPostcode.value,\n        notes: inputNotes.value,\n        errandType: \"collection\",\n        completed: false,\n        datetimeCompleted: \"0000-00-00 00:00:00\",\n        longitude: \"\",\n        latitude: \"\",\n        driverId: \"\",\n        waitingList: false,\n        assignedDate: \"\"\n      };\n     console.log(collectionRequest);\n      let colReq = [];\n      //get storage and turn into array\n      if (localStorage.getItem('colRequest')) {\n        colReq = JSON.parse(localStorage.getItem('colRequest'));\n\n        //localStorage.removeItem('lorem');\n        //localStorage.clear();\n      }\n      //add new object in the array\n        colReq.push(collectionRequest);\n        \n      //save new to storage\n        localStorage.setItem('colRequest', JSON.stringify(colReq));\n\n      //clear the form inputs\n       setLocationType({ value: \"\" });\n       setInputName({ value: \"\" });\n       setInputEmail({ value: \"\" });\n       setInputAppliance({ value: \"\" });\n       setInputHouseNo({ value: \"\" });\n       setInputStreet({ value: \"\" });\n       setInputTown({ value: \"\" });\n       setInputPostcode({ value: \"\" });\n       setInputNotes({ value: \"\" });\n    }\n  }\n\n  //console.log('lorem', messageOnSubmit);\n  return (\n    <form onSubmit={submitForm}>\n      <div className={messageOnSubmit.css}>\n        { messageOnSubmit.msg.map(line =>\n            <span>{line}</span>\n            )}\n      </div>\n      <div className=\"form-row\">\n        <label>Type of location</label>\n        <div className={locationType.css} >\n          <div className=\"form-check-inline\">\n            <input\n              type=\"radio\"\n              name=\"locationType\"\n              id=\"inlineRadio1\"\n              onChange={handleRadioPublic}\n              value=\"public area\"\n              checked={locationType.value === \"public area\"}\n            />\n            <label htmlFor=\"inlineRadio1\">Public Area</label>\n          </div>\n          <div className=\"form-check-inline\">\n            <input\n              type=\"radio\"\n              name=\"locationType\"\n              id=\"inlineRadio2\"\n              value=\"private property\"\n              onChange={e => setLocationType({ value: e.target.value })}\n              checked={locationType.value === \"private property\"}\n            />\n            <label htmlFor=\"inlineRadio2\">Private Property </label>\n          </div>\n        </div>\n      </div>\n      <div hidden={locationType.value === \"private property\" ? \"\" : \"hidden\"} >\n        <div className=\"form-row\">\n          <label htmlFor=\"inputName\">Full Name</label>\n          <div>\n            <input\n              type=\"text\"\n              id=\"inputName\"\n              name=\"inputName\"\n              onChange={e => setInputName({ value: e.target.value })}\n              value={inputName.value}\n              className={inputName.css}\n            />\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"email\">Email</label>\n          <div>\n            <input\n              type=\"text\"\n              id=\"inputEmail\"\n              name=\"inputEmail\"\n              onChange={e => setInputEmail({ value: e.target.value })}\n              value={inputEmail.value}\n              className={inputEmail.css}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <label htmlFor=\"inputAppliance\">Appliance Type</label>\n        <div>\n          <select\n            id=\"inputAppliance\"\n            name=\"appliance\"\n            value={inputAppliance.value}\n            className={inputAppliance.css}\n            onChange={e => setInputAppliance({ value: e.target.value })}\n          >\n            <option value=\"\">Select...</option>\n            { appliances.map(item =>\n            <option value={item.id}> {item.id} </option>\n            )}\n          </select>\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <label htmlFor=\"inputHouseNo\">House/Building No</label>\n        <div>\n          <input\n            type=\"text\"\n            id=\"inputHouseNo\"\n            value={inputHouseNo.value}\n            className={inputHouseNo.css}\n            onChange={e => setInputHouseNo({ value: e.target.value })}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <label htmlFor=\"inputStreet\">Street</label>\n        <div>\n          <input\n            type=\"text\"\n            id=\"inputStreet\"\n            value={inputStreet.value}\n            className={inputStreet.css}\n            onChange={e => setInputStreet({ value: e.target.value })}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <label htmlFor=\"inputTown\">Town/City</label>\n        <div>\n          <input\n            type=\"text\"\n            id=\"inputTown\"\n            value={inputTown.value}\n            className={inputTown.css}\n            onChange={e => setInputTown({ value: e.target.value })}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <label htmlFor=\"inputPostcode\" >Postcode</label>\n        <div>\n          <input\n            type=\"text\"\n            id=\"inputPostcode\"\n            value={inputPostcode.value}\n            className={inputPostcode.css}\n            onChange={e => setInputPostcode({ value: e.target.value })}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <label htmlFor=\"inputNotes\">Notes\n          <br /><small>Please describe location in detail. What is parking situation and access to the appliance?</small>\n        </label>\n        <div className=\"textarea-wrapper\">\n          <textarea\n            id=\"inputNotes\"\n            name=\"inputNotes\"\n            value={inputNotes.value}\n            className={inputNotes.css}\n            onChange={e => setInputNotes({ value: e.target.value })}\n          ></textarea>\n        </div>\n      </div>\n      <div className=\"form-row text-right\">\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n}\n\nexport default FormReport;","import FormReport from '../FormReport/FormReport.js';\nimport {Link} from \"react-router-dom\";\n\nfunction PageContentLanding() {\n  return (\n    <div className=\"main-column\">\n      <h1>Report old house appliance</h1>\n      <p>We recycle old house appliances. Let us know if you have one at home or spotted one dumped in public area.</p>\n      <Link to=\"/about\">Learn more...</Link>\n      <p><strong>Fill in the form to request collection of a scrap appliance.</strong></p>\n      <FormReport />\n    </div>\n  );\n}\n\nexport default PageContentLanding;","const appliances = [\r\n    {\"id\": \"Big Fridge\", \"weighting\": \"1.0\"},\r\n    {\"id\": \"Freezer\", \"weighting\": \"1.0\"},\r\n    {\"id\": \"Washer\", \"weighting\": \"1.0\"},\r\n    {\"id\": \"Small Fridge\", \"weighting\": \"0.5\"},\r\n    {\"id\": \"Dryer\", \"weighting\": \"0.5\"},\r\n    {\"id\": \"Oven\", \"weighting\": \"0.5\"}\r\n  ];\r\nfunction PageAbout() {\r\n    return (\r\n        <div className=\"main-column\">\r\n            <h1>About us</h1>\r\n            <h2>Who we are and what we do</h2>\r\n            <p>We are AO.com recycle service. Anyone who wants to get rid of their old house appliance can request that we collect it. We will check if it is possible within next 7 days, and give you possible dates to choose from. If there is no collection available, you can opt in to the waiting list.</p>\r\n            <h2>Frequently asked questions</h2>\r\n            <p><strong>What appliances do you accept?</strong><br />\r\n            Currently we accept the following:\r\n            <ul>\r\n            { appliances.map(item =>\r\n            <li> {item.id} </li>\r\n            )}\r\n            </ul>\r\n                \r\n            </p>\r\n            <p><strong>What should I do on the collection day?</strong><br />\r\n            Please put out your appliance in front of your property.\r\n            </p>\r\n            <p><strong>What if I need to change/cancel the collection on the agreed date?</strong><br/>\r\n            You need your collection ID. Go to <a href=\"/manage\">this page</a> and use it to bring your collectin for an edit.</p>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageAbout;","import './DriversListItem.css';\nfunction DriversListItem(props) {  \n    return (\n        <div className=\"drivers-list-item\">\n          <div className= {props.errandType === \"collection\" ? \"box-head green\" : \"box-head blue\"} >\n            <span className=\"tick-box-icon\">{props.completed ? '\\u2611' : '\\u2610'}</span>\n            {props.houseNo} {props.street}, {props.town}, {props.postcode} \n            <span className=\"triangle\">&#9660;</span>\n          </div>\n          <div className=\"box-body\">\n            Reference no: {props.id}\n            { props.name !== \"\" ? <br/> : '' }\n            { props.name !== \"\" ? 'Name: '+props.name : '' }\n            { props.email !== \"\" ? <br/> : ''}\n            { props.email !== \"\" ? 'Email: '+props.email : ''}\n            <br/>Item: {props.appliance}\n            <br/>Location Type: {props.locationType}\n            <br/>Notes: {props.notes}\n            <br/>Status: {props.completed ? 'completed' : 'not completed'}\n          </div>\n        </div>\n    );\n}\n\nexport default DriversListItem;","export const hardcodedRequests =\r\n{\r\n    requests: [\r\n        {\r\n            id: \"234f961d-06a6-4e27-befb-636ea99044d3\",\r\n            datetimeCreated: \"2020-12-17\",\r\n            locationType: \"public area\",\r\n            name: \"Lorem Ipsum\",\r\n            email: \"aaa@aa.aa\",\r\n            appliance: \"washing machine\",\r\n            houseNo: \"123\",\r\n            street: \"Some St\",\r\n            town: \"Some Town\",\r\n            postcode: \"ST1 2AB\",\r\n            notes: \"in the back alley\",\r\n            errandType: \"collection\",\r\n            completed: true,\r\n            datetimeCompleted: \"0000-00-00 00:00:00\",\r\n            longitude: \"\",\r\n            latitude: \"\",\r\n            driverId: \"\",\r\n            waitingList: false,\r\n            assignedDate: \"\"\r\n        },\r\n        {\r\n            id: \"456f961d-06a6-4e27-befb-636ea99044d3\",\r\n            datetimeCreated: \"2020-12-17\",\r\n            errandType: \"collection\",\r\n            name: \"Dolor Sit Amet\",\r\n            email: \"aaa@aa.aa\",\r\n            houseNo: \"45\",\r\n            street: \"Some Other St\",\r\n            town: \"Some Other Town\",\r\n            postcode: \"ST2 3CD\",\r\n            appliance: \"fridge\",\r\n            locationType: \"private property\",\r\n            notes: \"\",\r\n            completed: false,\r\n            datetimeCompleted: \"0000-00-00 00:00:00\",\r\n            longitude: \"\",\r\n            latitude: \"\",\r\n            driverId: \"\",\r\n            waitingList: false,\r\n            assignedDate: \"\"\r\n        },\r\n        {\r\n            id: \"686f961d-06a6-4e27-befb-636ea99044d3\",\r\n            datetimeCreated: \"2020-12-17\",\r\n            errandType: \"collection\",\r\n            name: \"John Doe\",\r\n            email: \"aaa@aa.aa\",\r\n            houseNo: \"67\",\r\n            street: \"Lorem Ipsum\",\r\n            town: \"Dolor sit amet\",\r\n            postcode: \"ABC 123\",\r\n            appliance: \"dish washer\",\r\n            locationType: \"private property\",\r\n            notes: \"no parking in front\",\r\n            completed: false,\r\n            datetimeCompleted: \"0000-00-00 00:00:00\",\r\n            longitude: \"\",\r\n            latitude: \"\",\r\n            driverId: \"\",\r\n            waitingList: false,\r\n            assignedDate: \"\"\r\n        },\r\n        {\r\n            id: \"212f961d-06a6-4e27-befb-636ea99044d3\",\r\n            datetimeCreated: \"2020-12-18\",\r\n            errandType: \"collection\",\r\n            name: \"Mary Newman\",\r\n            email: \"aaa@aa.aa\",\r\n            houseNo: \"89\",\r\n            street: \"Adipiscing\",\r\n            town: \"Consectetur\",\r\n            postcode: \"ABC 123\",\r\n            appliance: \"dish washer\",\r\n            locationType: \"private property\",\r\n            notes: \"no parking in front\",\r\n            completed: false,\r\n            datetimeCompleted: \"0000-00-00 00:00:00\",\r\n            longitude: \"\",\r\n            latitude: \"\",\r\n            driverId: \"\",\r\n            waitingList: false,\r\n            assignedDate: \"\"\r\n        },\r\n    ],\r\n    users: [\r\n        {\r\n            id: 1,\r\n            permissionLevel: \"admin\",\r\n            name: \"Dorota\",\r\n            email: \"ccc@cc.cc\",\r\n            password: \"loremipsum\"\r\n        },\r\n        {\r\n            id: 2,\r\n            permissionLevel: \"admin\",\r\n            name: \"Dan\",\r\n            email: \"ddd@dd.dd\",\r\n            password: \"loremipsum\"\r\n        },\r\n        {\r\n            id: 3,\r\n            permissionLevel: \"driver\",\r\n            name: \"Bob\",\r\n            email: \"bbb@bb.bb\",\r\n            password: \"loremipsum\"\r\n        },\r\n        {\r\n            id: 4,\r\n            permissionLevel: \"driver\",\r\n            name: \"Alice\",\r\n            email: \"aaa@aa.aa\",\r\n            password: \"loremipsum\"\r\n        },                       \r\n    ]\r\n};","import {useState} from 'react';\nimport DriversListItem from '../DriversListItem/DriversListItem.js';\nimport {hardcodedRequests} from '../AdminCollectionRequests/CollectionRequestsData.js';\n\nfunction AdminDriversList() {\n  let storageItems = [];\n  if (localStorage.getItem('colRequest')) {\n      storageItems = JSON.parse(localStorage.getItem('colRequest'));\n      storageItems = storageItems.reverse();\n  }\n  //console.log(storageItems);\n  const hardcodedItems = hardcodedRequests.requests;\n  const allItems = storageItems.concat(hardcodedItems);\n  //console.log(allItems);\n  const [dirversItems, setDriversItems] = useState(allItems);\n\n//get items with todays date and driver's id  \n //const todaysDriversItems = dirversItems.filter(item => item.datetime === \"2020-12-17\" && item.driverId === 3);\n const todaysDriversItems = dirversItems;\n\n    return (\n        <div className=\"main-column\">\n          <h1>Your todays route is listed below.</h1>\n          { todaysDriversItems.map(item => \n            <DriversListItem \n            key={item.id}\n            id={item.id}\n            name={item.name}\n            email={item.email}\n            houseNo={item.houseNo} \n            street={item.street} \n            town={item.town} \n            postcode={item.postcode}\n            completed={item.completed}\n            errandType={item.errandType}\n            appliance={item.appliance}\n            locationType={item.locationType}\n            notes={item.notes}\n            />   \n          )}\n        </div>\n    );\n}\n\nexport default AdminDriversList;","import {hardcodedRequests} from '../AdminCollectionRequests/CollectionRequestsData.js';\r\n\r\nfunction AdminCollectionRequests() {\r\n  let storageItems = [];\r\n  if (localStorage.getItem('colRequest')) {\r\n      storageItems = JSON.parse(localStorage.getItem('colRequest'));\r\n      storageItems = storageItems.reverse();\r\n  }\r\n  //console.log(storageItems);\r\n  const hardcodedItems = hardcodedRequests.requests;\r\n  const allItems = storageItems.concat(hardcodedItems);\r\n  //console.log(allItems);\r\n\r\n    return (\r\n        <div className=\"main-column\">\r\n          <h1>All requests are listed below.</h1>\r\n          { allItems.map(item => \r\n            <p>\r\n            key: {item.id} <br/>\r\n            id: {item.id} <br/>\r\n            name: {item.name} <br/>\r\n            email: {item.email} <br/>\r\n            houseNo: {item.houseNo} <br/> \r\n            street: {item.street} <br/> \r\n            town: {item.town} <br/> \r\n            postcode: {item.postcode} <br/>\r\n            completed: {item.completed} <br/>\r\n            appliance: {item.appliance} <br/>\r\n            locationType: {item.locationType} <br/>\r\n            notes: {item.notes}<br/>\r\n            errandType: {item.errandType} <br/>            \r\n            completed: {item.completed}<br/>\r\n            datetimeCompleted: {item.datetimeCompleted}<br/>\r\n            longitude: {item.longitude}<br/>\r\n            latitude: {item.latitude}<br/>\r\n            driverId: {item.driverId}<br/>\r\n            waitingList: {item.waitingList}<br/>\r\n            assignedDate: {item.assignedDate}\r\n            </p>  \r\n          )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminCollectionRequests;","import './AdminDepotMap.css';\r\nimport React from 'react';\r\nimport Map from 'devextreme-react/map';\r\n\r\nconst AdminDepotMap = () => {\r\n\r\n  const BING_KEY =`${process.env.REACT_APP_BING_API}`\r\n\r\n  const routesData = [{\r\n    weight: 0.5,\r\n    color: 'blue',\r\n    opacity: 1,\r\n    mode: 'driving',\r\n    locations: [\r\n      [53.391139000000000,-3.067504000000000],\r\n      [53.391535103505300,-3.066025692571600],\r\n      [53.390091033141000,-3.084635511553780],\r\n      [53.390450000000000,-3.061096000000000],\r\n      [53.388854000000000,-3.059628000000000],\r\n      [53.390031000000000,-3.058588000000000],\r\n      [53.392692000000000,-3.084654000000000],\r\n      [53.396637000000000,-3.083837000000000],\r\n      [53.392981000000000,-3.084496000000000],\r\n      [53.397496000000000,-3.079317000000000],\r\n      [53.367750000000000,-3.046028000000000],\r\n      'Oxton'\r\n    ]},\r\n    {\r\n      weight: 6,\r\n      color: 'red',\r\n      opacity: 0.5,\r\n      mode: 'walking',\r\n      locations: [\r\n        [53.391139000000000, -3.067504000000000],\r\n        [53.391535103505300, -3.066025692571600],\r\n        [53.390091033141000, -3.084635511553780],\r\n        [53.390450000000000, -3.061096000000000],\r\n        [53.388854000000000, -3.059628000000000],\r\n        [53.390031000000000, -3.058588000000000],\r\n        [53.392692000000000, -3.084654000000000],\r\n        [53.396637000000000, -3.083837000000000],\r\n        [53.392981000000000, -3.084496000000000],\r\n        [53.397496000000000, -3.079317000000000],\r\n        [53.367750000000000, -3.046028000000000],\r\n        'Oxton'\r\n      ]}\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Map\r\n        defaultCenter={['Prenton', 'Prenton', 'CH43 8TJ']}\r\n        defaultZoom={14}\r\n        apiKey={BING_KEY}\r\n        height={500}\r\n        width=\"100%\"\r\n        provider=\"bing\"\r\n        routes={routesData}\r\n        // type = \"roadmap\" || \"satellite\" || \"hybrid\"\r\n        type=\"roadmap\" >\r\n\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDepotMap;","import {openDB} from 'idb';\r\n\r\nexport const defineDatabase = async (dbName, storeList) => {\r\n\r\n  const version = 1;\r\n\r\n  return await openDB(dbName, version, {\r\n    upgrade(db) {\r\n      storeList.forEach(storeName => {\r\n        if (!db.objectStoreNames.contains(storeName)) {\r\n          db.createObjectStore(storeName);\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport const writeDatabase = async (db, storeName, key, value) => {\r\n\r\n  const tx = db.transaction(storeName, 'readwrite');\r\n  const store = await tx.objectStore(storeName);\r\n  await store.put(value, key);\r\n  await tx.done\r\n}\r\n\r\nexport const fetchDatabase = async (db, storeName, key) => {\r\n  const tx = db.transaction(storeName, 'readwrite');\r\n  const store = await tx.objectStore(storeName);\r\n  const value = await store.get(key);\r\n  await tx.done\r\n  return value;\r\n}","import React, {useState} from 'react';\r\nimport './AdminData.css';\r\n\r\nimport {defineDatabase,writeDatabase,fetchDatabase} from \"../AdminUtils/dbUtils\"\r\n\r\nlet cButton = {\r\n  color: \"#d1adf3\",\r\n  fontSize: \"15px\",\r\n  background: \"#524e4e\",\r\n  width: \"70px\",\r\n  minHeight: \"20px\",\r\n}\r\n\r\nconst AdminData = () => {\r\n\r\n  const [loadDB, setLoadDB] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n\r\n  if(!loadDB) {\r\n\r\n    // load stored data from indexDB only once\r\n    setLoadDB(true);\r\n\r\n    (async () => {\r\n      const db=await defineDatabase('letsRecycle',['sequences']);\r\n      let prevCounter = await fetchDatabase(db, 'sequences','counter');\r\n\r\n      if(prevCounter) {\r\n        setCount(prevCounter);\r\n      }\r\n      else {\r\n        await writeDatabase(db,'sequences','counter',count)\r\n      }\r\n\r\n    })();\r\n  }\r\n\r\n  const handleChange = (change) => {\r\n\r\n    (async () => {\r\n\r\n      let newCount = count + change;\r\n\r\n      if(change === 0) {\r\n        newCount = 0;\r\n      }\r\n\r\n      const db=await defineDatabase('letsRecycle',['sequences']);\r\n      await writeDatabase(db,'sequences','counter',newCount);\r\n\r\n      setCount(newCount);\r\n\r\n    })();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span>\r\n        <button style={cButton} onClick={() => handleChange(-1)}>-</button>\r\n        <button style={cButton} onClick= {() => handleChange(1)}>+</button>\r\n        <button style={cButton} onClick={() => handleChange(0)}>Reset</button>\r\n        <h2> {count} </h2>\r\n      </span>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminData;","import React, { useState, useMemo } from 'react';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport Form, { Label, SimpleItem } from 'devextreme-react/form';\r\n\r\nimport './AdminPostCode.css';\r\n\r\nconst data = { isAddressRequired: false, Address: '' };\r\n\r\nconst AdminPostCode = () => {\r\n\r\n  let [visible, setVisible] = useState(false);\r\n\r\n  const checkBoxOptions = useMemo(() => {\r\n    return {\r\n      text: \"Display PostCode\",\r\n      onValueChanged: (e) => {\r\n        setVisible(e.value);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const addressOptions = useMemo(() => {\r\n    return {\r\n      placeholder: 'Enter postcode',\r\n      maxLength: 50\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <Form formData={data} width={400}>\r\n\r\n        <SimpleItem\r\n          dataField=\"isAddressRequired\"\r\n          editorType=\"dxCheckBox\"\r\n          editorOptions={checkBoxOptions}>\r\n          <Label visible={false} />\r\n        </SimpleItem>\r\n\r\n        <SimpleItem\r\n          dataField=\"Address\"\r\n          editorType=\"dxTextBox\"\r\n          editorOptions={addressOptions}\r\n          visible={visible}\r\n        />\r\n\r\n      </Form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default AdminPostCode;","import './App.css';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Header from './components/Header/Header.js';\r\nimport Footer from './components/Footer/Footer.js';\r\nimport Sidebar from './components/Sidebar/Sidebar.js';\r\nimport AdminHeader from './components/AdminHeader/AdminHeader.js';\r\nimport AdminSidebar from './components/AdminSidebar/AdminSidebar.js';\r\nimport PageContentLanding from './components/PageContentLanding/PageContentLanding.js';\r\nimport PageAbout from './components/PageAbout/PageAbout.js';\r\nimport AdminDriversList from './components/AdminDriversList/AdminDriversList.js';\r\nimport AdminCollectionRequests from './components/AdminCollectionRequests/AdminCollectionRequests.js';\r\nimport AdminDepotMap from \"./components/AdminDepotMap/AdminDepotMap\";\r\nimport AdminData from \"./components/AdminData/AdminData\";\r\nimport AdminPostCode from \"./components/AdminPostCode/AdminPostCode\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <PageContentLanding />\r\n              <Sidebar />\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <div className=\"main-column\">\r\n                <PageAbout />\r\n              </div>\r\n              <Sidebar />\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          {/* admin  */}\r\n          <Route exact path=\"/admin\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                <AdminData />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/drivers-list\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminDriversList />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/all-requests\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminCollectionRequests />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>          \r\n          <Route path=\"/admin/map\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminDepotMap />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/postcode\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminPostCode />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}