{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","images/ad1.jpg","images/ad2.jpg","images/ad3.jpg","components/Sidebar/Sidebar.js","components/AdminMenu/AdminMenu.js","components/AdminHeader/AdminHeader.js","components/AdminSidebar/AdminSidebar.js","components/FormCollectionDates/FormCollectionDates.js","components/AdminUtils/makeAxiosCalls.js","components/AdminUtils/formatDate.js","components/FormUtils/getDateForPostcode.js","components/AdminUtils/routeUtils.js","components/FormReport/FormReport.js","components/PageContentLanding/PageContentLanding.js","components/PageAbout/PageAbout.js","components/FormManageCollection/FormManageCollection.js","components/PageManageCollection/PageManageCollection.js","components/DriversListItem/DriversListItem.js","components/AdminDriversList/AdminDriversList.js","components/AdminDepotMap/AdminDepotMap.js","components/AdminData/depotList.js","components/AdminData/AdminData.js","components/AdminPostCode/AdminPostCode.js","components/AdminUtils/dbUtils.js","components/AdminCounter/AdminCounter.js","components/FormUtils/TestPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","exact","activeClassName","Footer","Date","getFullYear","Sidebar","href","target","rel","src","ad1","alt","ad2","ad3","AdminMenu","AdminHeader","useState","menuState","setMenuState","Fragment","onClick","hidden","AdminSidebar","FormCollectionDates","props","dates1","dates","dates2","length","concat","approvedDate","setApprovedDate","approvedKey","setApprovedKey","handleRadioData","e","value","dataset","key","formMessage","operation","onSubmit","confirmDate","map","date","n","type","name","id","onChange","checked","data-key","htmlFor","axios","require","makeGetCall","url","a","dataOnly","get","response","objReturn","data","makePostCall","objBody","config","headers","postCall","post","then","catch","error","printReturn","promise","formatFullDate","myDate","format","day","getDate","month","getMonth","year","formatDbDate","dbDate","slice","getDatesForPostcode","postcode","arrDates","arrRefNos","result","res","push","refNo","myObj","getPostCodeDetails","codeToCheck","postcodes","lookup","filter","isPostCodeValid","postCodeDetails","status","appliances","weighting","collectionDatesAndRefs","FormReport","locationType","setLocationType","inputName","setInputName","inputEmail","setInputEmail","inputAppliance","setInputAppliance","inputHouseNo","setInputHouseNo","inputStreet","setInputStreet","inputTown","setInputTown","inputPostcode","setInputPostcode","inputNotes","setInputNotes","msg","submissionOutcome","setSubmissionOutcome","collectionRequest","setCollectionRequest","validateForm","errorMsg","css","validator","validate","clearFormInputs","submitForm","preventDefault","validation","objColReq","customerName","customerEmail","itemType","houseNo","street","townAddress","notes","undefined","showDateForm","saveReq","saveUrl","line","i","item","PageContentLanding","PageAbout","FormManageCollection","inputRef","setInputRef","inputActionType","setInputActionType","getUrl","request","colReq","addressPostcode","delUrl","delRequest","console","log","message","placeholder","PageManageCollection","DriversListItem","routeAction","town","email","appliance","names","streets","locations","getDriversItems","driverId","myArray","AdminDriversList","now","startDate","setStartDate","formatedDate","setFormatedDate","setDbDate","driversItems","setDriversItems","useEffect","drItems","arrItemsAddress","Math","floor","random","objItem","selected","dateFormat","AdminDepotMap","BING_KEY","process","REACT_APP_BING_API","defaultCenter","defaultZoom","apiKey","height","width","provider","routes","weight","color","opacity","mode","columns","accessor","depotName","postCode","fleetSize","AdminData","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","AdminPostCode","useForm","register","handleSubmit","errors","ref","required","postcodeA","postcodeB","defineDatabase","dbName","storeList","openDB","upgrade","db","forEach","storeName","objectStoreNames","contains","createObjectStore","writeDatabase","tx","transaction","objectStore","store","put","done","fetchDatabase","cButton","fontSize","background","minHeight","AdminCounter","loadDB","setLoadDB","count","setCount","prevCounter","handleChange","change","newCount","style","TestPage","lorem","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.835a2c8c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n        <header>\r\n        <nav className=\"navbar\">\r\n          <div className=\"container\">\r\n            <Link to=\"/\" >&#9851; <span>Let&apos;s Recycle</span></Link>\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/about\" activeClassName=\"active\">About</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/manage-collection\" activeClassName=\"active\">Manage Collection</NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n      <footer>\r\n      <div className=\"container\">\r\n        Copyright &copy;  {(new Date().getFullYear())} Let&apos;s Recycle All Rights Reserved\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/ad1.3ac9f89e.jpg\";","export default __webpack_public_path__ + \"static/media/ad2.a97b28cd.jpg\";","export default __webpack_public_path__ + \"static/media/ad3.6719401c.jpg\";","import React from 'react';\r\nimport ad1 from '../../images/ad1.jpg';\r\nimport ad2 from '../../images/ad2.jpg';\r\nimport ad3 from '../../images/ad3.jpg';\r\nimport './Sidebar.css';\r\n\r\nfunction Sidebar() {\r\n  return (\r\n        <div className=\"side-column\">\r\n            <p>\r\n                <a href=\"https://ao.com\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img src={ad1} alt=\"advertisement1\" />\r\n                </a>\r\n            </p>\r\n            <p>\r\n                <a href=\"https://ao.com\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img src={ad2} alt=\"advertisement2\" />\r\n                </a>\r\n            </p>\r\n            <p>\r\n                <a href=\"https://ao.com\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img src={ad3} alt=\"advertisement3\" />\r\n                </a>\r\n            </p>\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './AdminMenu.css';\r\n\r\nfunction AdminMenu() {\r\n  return (\r\n    <div className=\"\">\r\n    <ul className=\"admin-menu\">\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink exact to=\"/admin\">Route Data</NavLink>\r\n        </li>\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink to=\"/admin/map\">Depot Map</NavLink>\r\n        </li>\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink to=\"/admin/postcode\">PostCodes</NavLink>\r\n        </li>\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink to=\"/admin/drivers-list\">Driver&apos;s list</NavLink>\r\n        </li>\r\n        <li className=\"admin-menu-item\">\r\n            <NavLink to=\"/admin/counter\">Test Counter</NavLink>\r\n        </li>\r\n    </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminMenu;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AdminMenu from '../AdminMenu/AdminMenu.js';\r\nimport './AdminHeader.css';\r\n\r\nfunction AdminHeader() {\r\n  const [menuState, setMenuState] = useState('close');\r\n  const showHideMenu = () => {\r\n    if (menuState === 'close') { setMenuState('open'); }\r\n    if (menuState === 'open') { setMenuState('close'); }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <header>\r\n        <nav className=\"navbar\">\r\n          <div className=\"admin-container\">\r\n            <Link to=\"/\" >&#9851; <span>Let&apos;s Recycle</span></Link>\r\n            <span className=\"mobile-visible\" >\r\n              <span className={`hamburger-icon ${menuState}`} onClick={showHideMenu}></span>\r\n            </span>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      <div hidden={menuState === 'open' ? '' : 'hidden'}>\r\n        < AdminMenu />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default AdminHeader;\r\n","import React from 'react';\r\nimport AdminMenu from '../AdminMenu/AdminMenu.js';\r\n\r\nfunction AdminSidebar() {\r\n  return (\r\n    <div className=\"mobile-hidden\">\r\n        <AdminMenu />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminSidebar;\r\n","/* ?eslint-disable */\r\nimport React, { useState } from 'react';\r\n\r\nfunction FormCollectionDates(props) {\r\n  const dates1 = props.dates;\r\n  let dates2 = props.dates;\r\n  if (dates1.length > 0) {\r\n    const clear = ['unselect date'];\r\n    dates2 = dates1.concat(clear);\r\n  }\r\n  const [approvedDate, setApprovedDate] = useState('');\r\n  const [approvedKey, setApprovedKey] = useState('');\r\n\r\n  const handleRadioData = (e) => {\r\n    if (e.target.value !== 'unselect date') {\r\n      setApprovedDate(e.target.value);\r\n      setApprovedKey(e.target.dataset.key);\r\n    } else {\r\n      setApprovedDate('');\r\n      setApprovedKey('');\r\n    }\r\n  };\r\n  const handleForm = (e) => {\r\n    props.confirmDate(e, approvedDate, approvedKey);\r\n    setApprovedDate('');\r\n    setApprovedKey('');\r\n  };\r\n  const formMessage = (props.operation === 'create' ? 'If none of the dates is selected, this request will be cancelled. You can try some other time.' : 'If none of the dates is selected, your current collection date will not be changed.');\r\n\r\n  return (\r\n    <form onSubmit={handleForm}>\r\n      <p><strong>Available collection date(s) listed below. Select one that suits you and confirm.</strong></p>\r\n      <div className=\"form-row\">\r\n        <label>Available Date(s)<br />\r\n          <small>{formMessage}</small>\r\n        </label>\r\n        <div className=\"v-align-top\">\r\n          <br />\r\n          {dates2.map((date, n) => <div key={n}>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"approvedDate\"\r\n              id={`dateRadio${n}`}\r\n              onChange={handleRadioData}\r\n              value={date}\r\n              checked={approvedDate === date}\r\n              data-key={n}\r\n            />\r\n            <label htmlFor={`dateRadio${n}`}>{date}</label>\r\n          </div>)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row text-right\">\r\n        <button type=\"submit\">Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\nexport default FormCollectionDates;\r\n","/* eslint-disable */\r\nconst axios = require('axios');\r\n\r\n/**\r\n * this makes GET call using axios and returns a promise\r\n * @param url - string, full url\r\n * @param dataOnly - bolean. If true will return only data, if false full response\r\n */\r\n\r\nexport const makeGetCall = async (url, dataOnly = true) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    // console.log('lorem = ', response);\r\n    let objReturn = response.data;\r\n    if (!dataOnly) {\r\n      objReturn = response;\r\n    }\r\n    // console.log('objReturn = ', objReturn);\r\n    return objReturn;\r\n  } catch (error) {\r\n    // console.error('my error = ', error);\r\n    return error;\r\n  }\r\n};\r\n\r\n/**\r\n * this makes POST call using axios and returns a promise\r\n * @param url - string, full url\r\n * @param objBody - object with data that will go in the body of the request\r\n * @param dataOnly - bolean. If true will return only data, if false full response\r\n */\r\n\r\nexport const makePostCall = async (url, objBody, dataOnly = true) => {\r\n  const config = { headers: { 'Content-Type': 'application/json' } };\r\n  const postCall = axios.post(url, objBody, config)\r\n    .then(function (response) {\r\n      // console.log(response);\r\n      let objReturn = response.data;\r\n      if (!dataOnly) {\r\n        objReturn = response;\r\n      }\r\n      // console.log('objReturn = ', objReturn);\r\n      return objReturn;\r\n    })\r\n    .catch(function (error) {\r\n      // console.log(error);\r\n      return error;\r\n    });\r\n\r\n  const printReturn = async () => {\r\n    const a = await postCall;\r\n    //console.log(a);\r\n    return a;\r\n  };\r\n  const promise = await printReturn();\r\n  return promise;\r\n};\r\n","/* eslint-disable */\r\n/**\r\n * this accepts full js date and returns formatted\r\n * @param {date object} myDate - full js date object\r\n * @param {string} format can be 'user' or 'db'. First returns dd-mm-yyyy, second yyyy-mm-dd. DEFAULT IS USER!!!\r\n */\r\n\r\nexport const formatFullDate = (myDate, format = 'user') => {\r\n  let day = myDate.getDate();\r\n  if (day < 10) { day = `0${day}`; }\r\n  let month = (myDate.getMonth() + 1);\r\n  if (month < 10) { month = `0${month}`; }\r\n  const year = myDate.getFullYear();\r\n  if (format === 'user') {\r\n    return `${day}-${month}-${year}`;\r\n  }\r\n  if (format === 'db') {\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n};\r\n\r\n/**\r\n * this accepts yyyy-mm-dd date and returns dd-mm-yyyy\r\n * @param {string} dbDate - yyyy-mm-dd\r\n */\r\nexport const formatDbDate = (dbDate) => {\r\n  const day = dbDate.slice(8, 10);\r\n  const month = dbDate.slice(5, 7);\r\n  const year = dbDate.slice(0, 4);\r\n\r\n  return `${day}-${month}-${year}`;\r\n};\r\n","/* eslint-disable */\r\nimport { makeGetCall } from '../AdminUtils/makeAxiosCalls.js';\r\nimport { formatDbDate } from '../AdminUtils/formatDate.js';\r\n\r\n/**\r\n * This function returns object containing two arrays: one with dates, second with ref numbers\r\n * @param {string} postcode \r\n */ \r\nconst getDatesForPostcode = async (postcode) => {\r\n  // postcode = 'M18 7TQ'; // eslint-disable-line\r\n  const url = `https://1t4ggjq9kl.execute-api.eu-west-2.amazonaws.com/prod/api/collect-request?${postcode}`;\r\n  const data = await makeGetCall(url);\r\n  // console.log(data);\r\n  let arrDates = [];\r\n  let arrRefNos = [];\r\n  if (data.result.length > 0) {\r\n    // eslint-disable-next-line\r\n    for (const res of data.result) {\r\n      arrDates.push(formatDbDate(res.date));\r\n      arrRefNos.push(res.refNo);\r\n    }\r\n  }\r\n  const myObj = {arrDates, arrRefNos};\r\n  // console.log(myObj);\r\n  return myObj;\r\n};\r\n\r\nexport default getDatesForPostcode;\r\n","import postcodes from 'node-postcodes.io';\r\nimport { round } from './mathUtils.js';\r\n\r\n/**\r\n *\r\n * @param codeToCheck\r\n * @returns {Promise<unknown>}\r\n */\r\nexport const getPostCodeDetails = async (codeToCheck) => postcodes.lookup(codeToCheck,\r\n  { filter: 'postcode,longitude,latitude' });\r\n\r\n/**\r\n *\r\n * @param codeToCheck\r\n * @returns {Promise<boolean>}\r\n */\r\n\r\nexport const isPostCodeValid = async (codeToCheck) => {\r\n  const postCodeDetails = await getPostCodeDetails(codeToCheck);\r\n  return postCodeDetails.status !== 404;\r\n};\r\n\r\n/**\r\n * Calculates the haversine distance in miles between two (latitude,longitude) coordinates.\r\n * @param [latitudeA, longitudeA] point A\r\n * @param [latitudeB, longitudeB] point B\r\n * @param {boolean} earth radius in Miles.\r\n */\r\n\r\nexport const distanceBetween = ([latA, lonA], [latB, lonB]) => {\r\n  const toRadian = (angle) => (Math.PI / 180) * angle;\r\n  const distance = (a, b) => (Math.PI / 180) * (a - b);\r\n  const earthRadiusInMiles = 3958.8;\r\n\r\n  const dLat = distance(latB, latA);\r\n  const dLon = distance(lonB, lonA);\r\n\r\n  const radianLatA = toRadian(latA);\r\n  const radianLatB = toRadian(latB);\r\n\r\n  // Haversine Formula\r\n  const a = (Math.sin(dLat / 2) ** 2)\r\n    + (Math.sin(dLon / 2) ** 2)\r\n    * Math.cos(radianLatA) * Math.cos(radianLatB);\r\n\r\n  const c = 2 * Math.asin(Math.sqrt(a));\r\n\r\n  return round(earthRadiusInMiles * c, 2);\r\n};\r\n","/* xeslint-disable */\r\nimport React, { useState } from 'react';\r\nimport './FormReport.css';\r\nimport validator from 'email-validator';\r\nimport FormCollectionDates from '../FormCollectionDates/FormCollectionDates.js';\r\nimport getDatesForPostcode from '../FormUtils/getDateForPostcode.js';\r\nimport { isPostCodeValid } from '../AdminUtils/routeUtils.js';\r\nimport { makePostCall } from '../AdminUtils/makeAxiosCalls.js';\r\n\r\nconst appliances = [\r\n  { id: 'Big Fridge', weighting: '1.0' },\r\n  { id: 'Freezer', weighting: '1.0' },\r\n  { id: 'Washer', weighting: '1.0' },\r\n  { id: 'Small Fridge', weighting: '0.5' },\r\n  { id: 'Dryer', weighting: '0.5' },\r\n  { id: 'Oven', weighting: '0.5' },\r\n];\r\nlet collectionDatesAndRefs = { arrDates: [], arrRefNos: [] };\r\nfunction FormReport() {\r\n  const [locationType, setLocationType] = useState({ value: '' });\r\n  const [inputName, setInputName] = useState({ value: '' });\r\n  const [inputEmail, setInputEmail] = useState({ value: '' });\r\n  const [inputAppliance, setInputAppliance] = useState({ value: '' });\r\n  const [inputHouseNo, setInputHouseNo] = useState({ value: '' });\r\n  const [inputStreet, setInputStreet] = useState({ value: '' });\r\n  const [inputTown, setInputTown] = useState({ value: '' });\r\n  const [inputPostcode, setInputPostcode] = useState({ value: '' });\r\n  const [inputNotes, setInputNotes] = useState({ value: '' });\r\n  const [submissionOutcome, setSubmissionOutcome] = useState({ msg: [] });\r\n  const [collectionRequest, setCollectionRequest] = useState({});\r\n\r\n  /* this clears name and email when user switches to public */\r\n  const handleRadioPublic = (e) => {\r\n    setLocationType({ value: e.target.value });\r\n    setInputName({ value: '' });\r\n    setInputEmail({ value: '' });\r\n  };\r\n\r\n  const validateForm = async () => {\r\n    const errorMsg = [];\r\n    // console.log(locationType.value, inputName.value, inputEmail.value, inputAppliance.value, inputHouseNo.value, inputStreet.value, inputTown.value, inputPostcode.value, inputNotes.value);\r\n    if (locationType.value === '') {\r\n      errorMsg.push('Please select Location Type');\r\n      setLocationType({ value: '', css: 'textRed' });\r\n    }\r\n    if (locationType.value === 'private property') {\r\n      if (inputName.value === '') {\r\n        errorMsg.push('Please enter your Forename and Surname.');\r\n        setInputName({ value: '', css: 'borderRed' });\r\n      }\r\n      if (inputEmail.value === '' || validator.validate(inputEmail.value) !== true) {\r\n        errorMsg.push('Please enter a valid Email.');\r\n        setInputEmail({ value: inputEmail.value, css: 'borderRed' });\r\n      }\r\n    }\r\n    if (inputAppliance.value === '') {\r\n      errorMsg.push('Please select Appliance Type.');\r\n      setInputAppliance({ value: '', css: 'borderRed' });\r\n    }\r\n    if (inputHouseNo.value === '') {\r\n      errorMsg.push('Please enter House/Building number.');\r\n      setInputHouseNo({ value: '', css: 'borderRed' });\r\n    }\r\n    if (inputStreet.value === '') {\r\n      errorMsg.push('Please enter Street.');\r\n      setInputStreet({ value: '', css: 'borderRed' });\r\n    }\r\n    if (inputTown.value === '') {\r\n      errorMsg.push('Please enter Town or City.');\r\n      setInputTown({ value: '', css: 'borderRed' });\r\n    }\r\n    if (inputPostcode.value === '') {\r\n      errorMsg.push('Please enter Postcode.');\r\n      setInputPostcode({ value: '', css: 'borderRed' });\r\n    } else {\r\n      const validPostcode = await (isPostCodeValid(inputPostcode.value));\r\n      if (!validPostcode) {\r\n        errorMsg.push('Please enter a valid Postcode.');\r\n        setInputPostcode({ value: inputPostcode.value, css: 'borderRed' });\r\n        return errorMsg;\r\n      }\r\n    }\r\n    return errorMsg;\r\n  };\r\n\r\n  const clearFormInputs = () => {\r\n    // clear the form inputs\r\n    setLocationType({ value: '' });\r\n    setInputName({ value: '' });\r\n    setInputEmail({ value: '' });\r\n    setInputAppliance({ value: '' });\r\n    setInputHouseNo({ value: '' });\r\n    setInputStreet({ value: '' });\r\n    setInputTown({ value: '' });\r\n    setInputPostcode({ value: '' });\r\n    setInputNotes({ value: '' });\r\n  };\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n    const validation = await (validateForm(e));\r\n    // there was an error\r\n    if (validation.length > 0) {\r\n      setSubmissionOutcome({ msg: validation, css: 'errorMsg' });\r\n    } else {\r\n      // prepare collection request object\r\n      const objColReq = {\r\n        locationType: locationType.value,\r\n        customerName: inputName.value,\r\n        customerEmail: inputEmail.value,\r\n        itemType: inputAppliance.value,\r\n        houseNo: inputHouseNo.value,\r\n        street: inputStreet.value,\r\n        townAddress: inputTown.value,\r\n        postcode: inputPostcode.value,\r\n        notes: inputNotes.value,\r\n      };\r\n      setCollectionRequest(objColReq);\r\n      // console.log('objColReq!! = ', objColReq);\r\n\r\n      // get the dates\r\n      collectionDatesAndRefs = await getDatesForPostcode(inputPostcode.value);\r\n      // console.log('dates and refs = ', collectionDatesAndRefs);\r\n\r\n      if (collectionDatesAndRefs.arrDates !== undefined && collectionDatesAndRefs.arrDates.length > 0) {\r\n        if (locationType.value === 'private property') {\r\n          // show form if dates not empty\r\n          setSubmissionOutcome({ msg: [], css: '', showDateForm: true });\r\n          clearFormInputs();\r\n        } else {\r\n          // public area request\r\n          // get params for api call\r\n          const refNo = collectionDatesAndRefs.arrRefNos[0];\r\n          const url = `https://1t4ggjq9kl.execute-api.eu-west-2.amazonaws.com/prod/api/collect-confirm?refNo=${refNo}`;\r\n          const objBody = objColReq;\r\n          // console.log(objBody);\r\n\r\n          // save request in the db\r\n          const saveReq = await makePostCall(url, objBody);\r\n          // console.log(saveReq);\r\n          if (saveReq.status !== undefined && saveReq.status === 200) {\r\n            // console.log('success');\r\n            setSubmissionOutcome({ msg: ['Your request was sent.'], css: 'successMsg' });\r\n          } else {\r\n            setSubmissionOutcome({ msg: ['An error occured and your request was not saved. Try again some other time.'], css: 'errorMsg' });\r\n          }\r\n          clearFormInputs();\r\n        }\r\n      } else {\r\n        setSubmissionOutcome({ msg: ['Unfortunately there is no available collections for your location. Please try again in 7 days.'], css: 'successMsg' });\r\n\r\n        clearFormInputs();\r\n      }\r\n    } // if no validaton errors END\r\n  };\r\n  // this must be passed to FormDates component!!!\r\n  const confirmDate = async (e, approvedDate, approvedKey) => {\r\n    e.preventDefault();\r\n    if (approvedDate.length > 0) {\r\n      // get params for api call\r\n      const refNo = collectionDatesAndRefs.arrRefNos[approvedKey];\r\n      const saveUrl = `https://1t4ggjq9kl.execute-api.eu-west-2.amazonaws.com/prod/api/collect-confirm?refNo=${refNo}`;\r\n      const objBody = collectionRequest;\r\n      // console.log(objBody);\r\n\r\n      // save request in the db\r\n      const saveReq = await makePostCall(saveUrl, objBody);\r\n      // console.log(saveReq);\r\n      if (saveReq.status !== undefined && saveReq.status === 200) {\r\n        // console.log('success');\r\n        setSubmissionOutcome({ msg: [`Your collection is going to be on ${approvedDate}`], css: 'successMsg' });\r\n      } else {\r\n        setSubmissionOutcome({ msg: ['An error occured and your request was not saved. Try again some other time.'], css: 'errorMsg' });\r\n      }\r\n      // clear request after saving\r\n      setCollectionRequest({});\r\n    } else {\r\n      setSubmissionOutcome({ msg: [\"You didn't select any date, and your request was aborted. Feel free to try some other time. \"], css: 'successMsg' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitForm} hidden={!submissionOutcome.showDateForm ? '' : 'hidden'} >\r\n        <p><strong>Fill in the form to request collection of a scrap appliance.</strong></p>\r\n        <div className={submissionOutcome.css}>\r\n          {submissionOutcome.msg.map((line, i) => <span key={i}>{line}</span>)}\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label>Type of location</label>\r\n          <div className={locationType.css} >\r\n            <div className=\"form-check-inline\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"locationType\"\r\n                id=\"inlineRadio1\"\r\n                onChange={handleRadioPublic}\r\n                value=\"public area\"\r\n                checked={locationType.value === 'public area'}\r\n              />\r\n              <label htmlFor=\"inlineRadio1\">Public Area</label>\r\n            </div>\r\n            <div className=\"form-check-inline\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"locationType\"\r\n                id=\"inlineRadio2\"\r\n                value=\"private property\"\r\n                onChange={(e) => setLocationType({ value: e.target.value })}\r\n                checked={locationType.value === 'private property'}\r\n              />\r\n              <label htmlFor=\"inlineRadio2\">Private Property </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div hidden={locationType.value === 'private property' ? '' : 'hidden'} >\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"inputName\">Full Name</label>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"inputName\"\r\n                name=\"inputName\"\r\n                onChange={(e) => setInputName({ value: e.target.value })}\r\n                value={inputName.value}\r\n                className={inputName.css}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"inputEmail\"\r\n                name=\"inputEmail\"\r\n                onChange={(e) => setInputEmail({ value: e.target.value })}\r\n                value={inputEmail.value}\r\n                className={inputEmail.css}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputAppliance\">Appliance Type</label>\r\n          <div>\r\n            <select\r\n              id=\"inputAppliance\"\r\n              name=\"appliance\"\r\n              value={inputAppliance.value}\r\n              className={inputAppliance.css}\r\n              onChange={(e) => setInputAppliance({ value: e.target.value })}\r\n            >\r\n              <option value=\"\" key={0}>Select...</option>\r\n              {appliances.map((item, i) => <option value={item.id} key={i + 1}> {item.id} </option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputHouseNo\">House/Building No</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputHouseNo\"\r\n              value={inputHouseNo.value}\r\n              className={inputHouseNo.css}\r\n              onChange={(e) => setInputHouseNo({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputStreet\">Street</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputStreet\"\r\n              value={inputStreet.value}\r\n              className={inputStreet.css}\r\n              onChange={(e) => setInputStreet({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputTown\">Town/City</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputTown\"\r\n              value={inputTown.value}\r\n              className={inputTown.css}\r\n              onChange={(e) => setInputTown({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputPostcode\" >Postcode</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputPostcode\"\r\n              value={inputPostcode.value}\r\n              className={inputPostcode.css}\r\n              onChange={(e) => setInputPostcode({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"inputNotes\">Notes\r\n          <br /><small>Please describe location in detail. What is parking situation and access to the appliance?</small>\r\n          </label>\r\n          <div className=\"textarea-wrapper\">\r\n            <textarea\r\n              id=\"inputNotes\"\r\n              name=\"inputNotes\"\r\n              value={inputNotes.value}\r\n              className={inputNotes.css}\r\n              onChange={(e) => setInputNotes({ value: e.target.value })}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row text-right\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n      <div hidden={submissionOutcome.showDateForm ? '' : 'hidden'}>\r\n        <FormCollectionDates dates={collectionDatesAndRefs.arrDates} confirmDate={confirmDate} operation=\"create\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormReport;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FormReport from '../FormReport/FormReport.js';\r\n\r\nfunction PageContentLanding() {\r\n  return (\r\n    <div className=\"main-column\">\r\n      <h1>Report old house appliance</h1>\r\n      <p>We recycle old house appliances. Let us know if you have one at home or spotted one dumped in public area.</p>\r\n      <Link to=\"/about\">Learn more...</Link>\r\n      <FormReport />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageContentLanding;\r\n","import React from 'react';\r\n\r\nconst appliances = [\r\n  { id: 'Big Fridge', weighting: '1.0' },\r\n  { id: 'Freezer', weighting: '1.0' },\r\n  { id: 'Washer', weighting: '1.0' },\r\n  { id: 'Small Fridge', weighting: '0.5' },\r\n  { id: 'Dryer', weighting: '0.5' },\r\n  { id: 'Oven', weighting: '0.5' },\r\n];\r\nfunction PageAbout() {\r\n  return (\r\n    <div className=\"main-column\">\r\n      <h1>About us</h1>\r\n      <h2>Who we are and what we do</h2>\r\n      <p>We are AO.com recycle service. Anyone who wants to get rid of their old house appliance can request that we collect it. We will check if it is possible within next 7 days, and give you possible dates to choose from. If there is no collection available, you can opt in to the waiting list.</p>\r\n      <h2>Frequently asked questions</h2>\r\n      <p><strong>What appliances do you accept?</strong><br />\r\n            Currently we accept the following:</p>\r\n\r\n      <ul>\r\n        {appliances.map((item, n) => <li key={n}> {item.id} </li>)}\r\n      </ul>\r\n\r\n      <p><strong>What should I do on the collection day?</strong><br />\r\n            Please put out your appliance in front of your property.\r\n            </p>\r\n      <p><strong>What if I need to change/cancel the collection on the agreed date?</strong><br />\r\n            You need your collection ID. Go to <a href=\"/manage-collection\">this page</a> and use it to bring your collectin for an edit.</p>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageAbout;\r\n","/* xeslint-disable */\r\nimport React, { useState } from 'react';\r\nimport FormCollectionDates from '../FormCollectionDates/FormCollectionDates.js';\r\nimport getDatesForPostcode from '../FormUtils/getDateForPostcode.js';\r\nimport { makePostCall, makeGetCall } from '../AdminUtils/makeAxiosCalls.js';\r\n\r\nlet collectionDatesAndRefs = { arrDates: [], arrRefNos: [] };\r\n\r\nfunction FormManageCollection() {\r\n  const [inputRef, setInputRef] = useState({ value: '' });\r\n  const [inputActionType, setInputActionType] = useState({ value: '' });\r\n  const [submissionOutcome, setSubmissionOutcome] = useState({ msg: [] });\r\n  const [collectionRequest, setCollectionRequest] = useState({});\r\n\r\n  const validateForm = () => {\r\n    const errorMsg = [];\r\n    if (inputRef.value === '') {\r\n      errorMsg.push('Please enter request ref no.');\r\n      setInputRef({ value: '', css: 'textRed' });\r\n    }\r\n    if (inputActionType.value === '') {\r\n      errorMsg.push('Please select Operation.');\r\n      setInputActionType({ value: '', css: 'textRed' });\r\n    }\r\n    return errorMsg;\r\n  };\r\n\r\n  const clearFormInputs = () => {\r\n    // clear the form inputs\r\n    setInputActionType({ value: '' });\r\n    setInputRef({ value: '' });\r\n  };\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n    const validation = validateForm(e);\r\n    // there was an error\r\n    if (validation.length > 0) {\r\n      setSubmissionOutcome({ msg: validation, css: 'errorMsg' });\r\n    } else {\r\n      // get request form the db\r\n      // D01R04S13T31\r\n      // D01R07S04T06\r\n      const getUrl = `https://1t4ggjq9kl.execute-api.eu-west-2.amazonaws.com/prod/api/routes?refNo=${inputRef.value}`;\r\n      const request = await makeGetCall(getUrl);\r\n      // console.log('GET request =', request);\r\n      if (request.result !== undefined && request.result.length > 0) {\r\n        const colReq = request.result[0];\r\n        setCollectionRequest(colReq);\r\n        // console.log('req = ', colReq);\r\n\r\n        if (inputActionType.value === 'editDate') {\r\n          // get the dates\r\n          collectionDatesAndRefs = await getDatesForPostcode(colReq.addressPostcode);\r\n          // console.log('colDates in form file = ', collectionDatesAndRefs.arrDates);\r\n          // show form if dates not empty\r\n          if (collectionDatesAndRefs.arrDates !== undefined && collectionDatesAndRefs.arrDates.length > 0) {\r\n            setSubmissionOutcome({ msg: [], css: '', showDateForm: true });\r\n\r\n            clearFormInputs();\r\n            return;\r\n          }\r\n          setSubmissionOutcome({ msg: ['Unfortunately there is no available collections for your location. Please try again in 7 days.'], css: 'successMsg' });\r\n\r\n          clearFormInputs();\r\n          return;\r\n        }\r\n        if (inputActionType.value === 'delete') {\r\n          // CODE FOR DELETING REQUEST\r\n          const delUrl = `https://1t4ggjq9kl.execute-api.eu-west-2.amazonaws.com/prod/api/collect-cancel?refNo=${collectionRequest.refNo}`;\r\n\r\n          const delRequest = await makePostCall(delUrl);\r\n          console.log('del response= ', delRequest);\r\n          // check if there response wasn't an error\r\n          if (delRequest.message !== undefined && delRequest.message === 'collection cancelled') {\r\n            setSubmissionOutcome({ msg: ['Your collection was deleted.'], css: 'successMsg' });\r\n            setCollectionRequest({});\r\n          } else {\r\n            setSubmissionOutcome({ msg: ['An error occured. Collection was not deleted.'], css: 'errorMsg' });\r\n          }\r\n        }\r\n      } else { //  request not found\r\n        setSubmissionOutcome({ msg: ['No request with provided Ref Number was found.'], css: 'errorMsg' });\r\n        return;\r\n      }\r\n      clearFormInputs();\r\n    }\r\n  };\r\n\r\n  // this must be passed to FormDates component\r\n  // eslint-disable-next-line\r\n  const confirmDate = async (e, approvedDate, approvedKey) => {\r\n    e.preventDefault();\r\n    if (approvedDate.length > 0) {\r\n      /*       // add date to request\r\n            const request = {\r\n              locationType: 'private property',\r\n              customerName: 'Jane Newman',\r\n              customerEmail: 'aaa@aa.aa',\r\n              itemType: 'washer',\r\n              houseNo: '12',\r\n              street: 'Some St',\r\n              townAddress: 'Sometown',\r\n              postcode: 'sk1 2lg',\r\n              notes: 'lorem ipsum dolor sit amet',\r\n            };\r\n            // request.assignedDate = approvedDate;\r\n            // console.log(request);\r\n\r\n            // save request in the db\r\n            const refNo = 'D01R07S04T06';\r\n            const url = `https://1t4ggjq9kl.execute-api.eu-west-2.amazonaws.com/prod/api/collect-confirm?refNo=${refNo}`;\r\n            const data = await makePostCall(url, request);\r\n\r\n            console.log(data); */\r\n\r\n      // some code to save...\r\n      setSubmissionOutcome({ msg: [`Your collection date was changed to ${approvedDate}.`], css: 'successMsg' });\r\n\r\n      // clear request after saving\r\n      setCollectionRequest({});\r\n    } else {\r\n      setSubmissionOutcome({ msg: [\"You didn't select any date so your collection date stays as it was before. Feel free to try some other time.\"], css: 'successMsg' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitForm} hidden={!submissionOutcome.showDateForm ? '' : 'hidden'}>\r\n        <div className={submissionOutcome.css}>\r\n          {submissionOutcome.msg.map((line, i) => <span key={i}>{line}</span>)}\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"id\">Collection Ref Number</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputRef\"\r\n              name=\"inputRef\"\r\n              placeholder=\"\"\r\n              className={inputRef.css}\r\n              value={inputRef.value}\r\n              onChange={(e) => setInputRef({ value: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label>Operation</label>\r\n          <div className={inputActionType.css}>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"inputActionType\"\r\n                id=\"inlineRadio1\"\r\n                value=\"delete\"\r\n                checked={inputActionType.value === 'delete'}\r\n                onChange={(e) => setInputActionType({ value: e.target.value })}\r\n              />\r\n              <label htmlFor=\"inlineRadio1\">Cancel Your Collection</label>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"inputActionType\"\r\n                id=\"inlineRadio2\"\r\n                value=\"editDate\"\r\n                checked={inputActionType.value === 'editDate'}\r\n                onChange={(e) => setInputActionType({ value: e.target.value })}\r\n              />\r\n              <label htmlFor=\"inlineRadio2\">Request Another Collection Date </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row text-right\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n      <div hidden={submissionOutcome.showDateForm ? '' : 'hidden'}>\r\n        <FormCollectionDates dates={collectionDatesAndRefs.arrDates} confirmDate={confirmDate} operation=\"update\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormManageCollection;\r\n","import React from 'react';\r\nimport FormManageCollection from '../FormManageCollection/FormManageCollection.js';\r\n\r\nfunction PageManageCollection() {\r\n  return (\r\n    <div className=\"main-column\">\r\n      <h1>Manage your collection</h1>\r\n      <p>You are going to need the reference number to access your collection.</p>\r\n      <FormManageCollection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageManageCollection;\r\n","import React from 'react';\r\nimport './DriversListItem.css';\r\n\r\nfunction DriversListItem(props) {\r\n  return (\r\n        <div className=\"drivers-list-item\">\r\n          <div className= {props.routeAction === 'collection' ? 'box-head green' : 'box-head blue'} >\r\n{/*             <span className=\"tick-box-icon\">{props.completed ? '\\u2611' : '\\u2610'}</span> */}\r\n            {props.houseNo} {props.street}, {props.town}, {props.postcode}\r\n          </div>\r\n          <div className=\"box-body\">\r\n            Reference no: {props.refNo}\r\n            { props.name !== '' ? <br/> : '' }\r\n            { props.name !== '' ? `Name: ${props.name}` : '' }\r\n            { props.email !== '' ? <br/> : ''}\r\n            { props.email !== '' ? `Email: ${props.email}` : ''}\r\n            <br/>Item: {props.appliance}\r\n            <br/>Location Type: {props.locationType}\r\n            <br/>Notes: {props.notes}\r\n            <br/>Status: {props.status}\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default DriversListItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport DriversListItem from '../DriversListItem/DriversListItem.js';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { makeGetCall } from '../AdminUtils/makeAxiosCalls.js';\r\nimport { formatFullDate } from '../AdminUtils/formatDate.js';\r\n\r\nconst names = ['Mary Brown', 'Elizabeth Smith', 'Una Atchley', 'Wilma Tibbs', 'Pia Rucker', 'Tiny Litwin', 'Cameron Amon', 'Jarred Bartos', 'Leisha Tuthill', 'Ismael Pietsch', 'Casandra Lipsett', 'Ardella Bono', 'Saturnina Grenz', 'Amada Rees', 'Derek Sybert', 'Claudette Ruby', 'Trey Norden', 'Merlene Nygren', 'Jackson Catto', 'Breana Becker', 'Madlyn Aaronson'];\r\nconst streets = ['Brown St', 'Red Rd', 'Oak St', 'Leafy St', 'Green St', 'White Rd', 'Grend Ave', 'Randall Close', 'Bridge St', 'Bank Lane', 'West St'];\r\nconst locations = ['public area', 'private property'];\r\n// const towns = ['Oakton', 'Smallville', 'Greentown', 'Smalltown', 'Hightown', 'Lowtown', 'Northport', 'Westport', 'Eastport', 'Southport'];\r\n\r\n// eslint-disable-next-line\r\nconst getDriversItems = async (driverId, date) => {\r\n  const url = `https://1t4ggjq9kl.execute-api.eu-west-2.amazonaws.com/prod/api/routes?driverId=${driverId}&routeDate=${date}`;\r\n  const data = await makeGetCall(url);\r\n  console.log(data);\r\n  let myArray = [];\r\n  if (data.result.length > 0) {\r\n    myArray = data.result;\r\n  }\r\n  return myArray;\r\n};\r\n\r\nfunction AdminDriversList() {\r\n  const now = new Date();\r\n  const [startDate, setStartDate] = useState(now);\r\n  const [formatedDate, setFormatedDate] = useState(formatFullDate(now));\r\n  const [dbDate, setDbDate] = useState(formatFullDate(now, 'db'));\r\n  const [driversItems, setDriversItems] = useState([]);\r\n  useEffect(async () => {\r\n    // This is be executed when `loading` state changes\r\n    const drItems = await getDriversItems(1, dbDate);\r\n    // console.log('drItems= ', drItems, 'dbDate=', dbDate);\r\n    const arrItemsAddress = [];\r\n    // eslint-disable-next-line\r\n    for (const item of drItems) {\r\n      let name = '';\r\n      let locationType = '';\r\n      let email = '';\r\n      let street = streets[Math.floor(Math.random() * streets.length)];\r\n      let houseNo = Math.floor(Math.random() * 100);\r\n      if (item.routeAction === 'depot') {\r\n        street = 'Depot';\r\n        houseNo = 'AO';\r\n        locationType = 'depot';\r\n      } else {\r\n        locationType = locations[Math.floor(Math.random() * locations.length)];\r\n        if (locationType === 'private property') {\r\n          name = names[Math.floor(Math.random() * names.length)];\r\n          email = 'aaa@aa.aa';\r\n        }\r\n      }\r\n      // let town = towns[Math.floor(Math.random() * towns.length)];\r\n\r\n      const objItem = {\r\n        refNo: item.refNo,\r\n        name,\r\n        email,\r\n        houseNo,\r\n        street,\r\n        town: 'Greentown',\r\n        addressPostcode: item.addressPostcode,\r\n        status: item.status,\r\n        routeAction: item.routeAction,\r\n        appliance: item.itemType,\r\n        locationType,\r\n        notes: item.notes,\r\n      };\r\n      arrItemsAddress.push(objItem);\r\n    }\r\n    setDriversItems(arrItemsAddress);\r\n  }, [dbDate]);\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n    // call for route items for this date ??\r\n    setDriversItems([]);\r\n    setFormatedDate(formatFullDate(startDate));\r\n    setDbDate(formatFullDate(startDate, 'db'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-column\">\r\n      <h1>Your {formatFullDate(now) === formatedDate ? `todays (${formatedDate})` : `${formatedDate}`} route is listed below.</h1>\r\n      <form onSubmit={handleForm} >\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"id\">Select another date:</label>\r\n          <div className=\"datePickerWrap\">\r\n            <DatePicker\r\n              id=\"dateSelected\"\r\n              name=\"dateSelected\"\r\n              selected={startDate}\r\n              onChange={date => setStartDate(date)} // eslint-disable-line\r\n              dateFormat=\"dd-MM-yyyy\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Confirm</button>\r\n        </div>\r\n      </form>\r\n      {driversItems.length === 0 ? 'No items found for this date.' : ''}\r\n      { driversItems.map((item, n) => <DriversListItem\r\n        key={n}\r\n        refNo={item.refNo}\r\n        name={item.name}\r\n        email={item.email}\r\n        houseNo={item.houseNo}\r\n        street={item.street}\r\n        town={item.town}\r\n        postcode={item.addressPostcode}\r\n        status={item.status}\r\n        routeAction={item.routeAction}\r\n        appliance={item.appliance}\r\n        locationType={item.locationType}\r\n        notes={item.notes}\r\n      />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDriversList;\r\n","import './AdminDepotMap.css';\r\nimport React from 'react';\r\nimport Map from 'devextreme-react/map';\r\n\r\nconst AdminDepotMap = () => {\r\n  const BING_KEY = `${process.env.REACT_APP_BING_API}`;\r\n\r\n  const routesData = [{\r\n    weight: 0.5,\r\n    color: 'blue',\r\n    opacity: 1,\r\n    mode: 'driving',\r\n    locations: [\r\n      [53.391139000000000, -3.067504000000000],\r\n      [53.391535103505300, -3.066025692571600],\r\n      [53.390091033141000, -3.084635511553780],\r\n      [53.390450000000000, -3.061096000000000],\r\n      [53.388854000000000, -3.059628000000000],\r\n      [53.390031000000000, -3.058588000000000],\r\n      [53.392692000000000, -3.084654000000000],\r\n      [53.396637000000000, -3.083837000000000],\r\n      [53.392981000000000, -3.084496000000000],\r\n      [53.397496000000000, -3.079317000000000],\r\n      [53.367750000000000, -3.046028000000000],\r\n      'Oxton',\r\n    ],\r\n  },\r\n  {\r\n    weight: 6,\r\n    color: 'red',\r\n    opacity: 0.5,\r\n    mode: 'walking',\r\n    locations: [\r\n      [53.391139000000000, -3.067504000000000],\r\n      [53.391535103505300, -3.066025692571600],\r\n      [53.390091033141000, -3.084635511553780],\r\n      [53.390450000000000, -3.061096000000000],\r\n      [53.388854000000000, -3.059628000000000],\r\n      [53.390031000000000, -3.058588000000000],\r\n      [53.392692000000000, -3.084654000000000],\r\n      [53.396637000000000, -3.083837000000000],\r\n      [53.392981000000000, -3.084496000000000],\r\n      [53.397496000000000, -3.079317000000000],\r\n      [53.367750000000000, -3.046028000000000],\r\n      'Oxton',\r\n    ],\r\n  },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Map\r\n        defaultCenter={['Prenton', 'Prenton', 'CH43 8TJ']}\r\n        defaultZoom={14}\r\n        apiKey={BING_KEY}\r\n        height={500}\r\n        width=\"100%\"\r\n        provider=\"bing\"\r\n        routes={routesData}\r\n        // type = \"roadmap\" || \"satellite\" || \"hybrid\"\r\n        type=\"roadmap\" >\r\n\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDepotMap;\r\n","export const columns = [\r\n  {\r\n    Header: 'Depot Name',\r\n    accessor: 'depotName',\r\n  },\r\n  {\r\n    Header: 'Post Code',\r\n    accessor: 'postCode',\r\n  },\r\n  {\r\n    Header: 'Fleet Size',\r\n    accessor: 'fleetSize',\r\n  },\r\n];\r\n\r\nexport const data = [\r\n  { depotName: 'Horwich', postCode: 'HO1 8XJ', fleetSize: '26' },\r\n  { depotName: 'Stockport', postCode: 'M18 7TQ', fleetSize: '13' },\r\n  { depotName: 'Liverpool', postCode: 'L1 1DA', fleetSize: '15' },\r\n  { depotName: 'Dumfirmline', postCode: 'KY11 3AE', fleetSize: '11' },\r\n  { depotName: 'Watford', postCode: 'WD17 1AP', fleetSize: '20' },\r\n  { depotName: 'Milton Keynes', postCode: 'MK10 1SZ', fleetSize: '23' },\r\n  { depotName: 'Crewe', postCode: 'CW1 2BS', fleetSize: '14' },\r\n  { depotName: 'Cardiff', postCode: 'CF10 1BE', fleetSize: '8' },\r\n  { depotName: 'Southampton', postCode: 'SO14 0AH', fleetSize: '9' },\r\n  { depotName: 'Wolverhampton', postCode: 'WV1 1HB', fleetSize: '16' },\r\n  { depotName: 'Brighton', postCode: 'BN41 1HS', fleetSize: '6' },\r\n  { depotName: 'Southend', postCode: 'SS2 4DY', fleetSize: '8' },\r\n  { depotName: 'Middlesbrough', postCode: 'TS3 6AF', fleetSize: '23' },\r\n  { depotName: 'Blackpool', postCode: 'FY3 8DF', fleetSize: '11' },\r\n  { depotName: 'Derby', postCode: 'DE4 2HE', fleetSize: '25' },\r\n  { depotName: 'Leeds', postCode: 'LS2 8JS', fleetSize: '18' },\r\n  { depotName: 'Oldham', postCode: 'OL1 3EG', fleetSize: '5' },\r\n  { depotName: 'Reading', postCode: 'RG1 3YL', fleetSize: '13' },\r\n  { depotName: 'Blackburn', postCode: 'BB2 1NA', fleetSize: '19' },\r\n  { depotName: 'York', postCode: 'YO10 3FQ', fleetSize: '9' },\r\n];\r\n\r\nexport const staticData = {\r\n  depots: {\r\n    data: [\r\n      { depotName: 'Horwich', postCode: 'HO1 8XJ', fleetSize: '26' },\r\n      { depotName: 'Stockport', postCode: 'M18 7TQ', fleetSize: '13' },\r\n      { depotName: 'Liverpool', postCode: 'L1 1DA', fleetSize: '15' },\r\n      { depotName: 'Dumfirmline', postCode: 'KY11 3AE', fleetSize: '11' },\r\n      { depotName: 'Watford', postCode: 'WD17 1AP', fleetSize: '20' },\r\n      { depotName: 'Milton Keynes', postCode: 'MK10 1SZ', fleetSize: '23' },\r\n      { depotName: 'Crewe', postCode: 'CW1 2BS', fleetSize: '14' },\r\n      { depotName: 'Cardiff', postCode: 'CF10 1BE', fleetSize: '8' },\r\n      { depotName: 'Southampton', postCode: 'SO14 0AH', fleetSize: '9' },\r\n      { depotName: 'Wolverhampton', postCode: 'WV1 1HB', fleetSize: '16' },\r\n      { depotName: 'Brighton', postCode: 'BN41 1HS', fleetSize: '6' },\r\n      { depotName: 'Southend', postCode: 'SS2 4DY', fleetSize: '8' },\r\n      { depotName: 'Middlesbrough', postCode: 'TS3 6AF', fleetSize: '23' },\r\n      { depotName: 'Blackpool', postCode: 'FY3 8DF', fleetSize: '11' },\r\n      { depotName: 'Derby', postCode: 'DE4 2HE', fleetSize: '25' },\r\n      { depotName: 'Leeds', postCode: 'LS2 8JS', fleetSize: '18' },\r\n      { depotName: 'Oldham', postCode: 'OL1 3EG', fleetSize: '5' },\r\n      { depotName: 'Reading', postCode: 'RG1 3YL', fleetSize: '13' },\r\n      { depotName: 'Blackburn', postCode: 'BB2 1NA', fleetSize: '19' },\r\n      { depotName: 'York', postCode: 'YO10 3FQ', fleetSize: '9' },\r\n    ],\r\n    headers: [\r\n      {\r\n        field: 'depotName',\r\n        header: 'Depot Name',\r\n      },\r\n      {\r\n        field: 'postCode',\r\n        header: 'Post Code',\r\n      },\r\n      {\r\n        field: 'fleetSize',\r\n        header: 'Fleet Size',\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\nimport { columns, data } from './depotList.js';\r\n\r\nimport './AdminData.css';\r\n\r\nfunction AdminData() {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n      {headerGroups.map((headerGroup) => (\r\n        <tr {...headerGroup.getHeaderGroupProps()}>\r\n          {headerGroup.headers.map((column) => (\r\n            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n      {rows.map((row) => {\r\n        prepareRow(row);\r\n        return (\r\n          <tr {...row.getRowProps()}>\r\n            {row.cells.map((cell) => <td {...cell.getCellProps()}>{cell.render('Cell')}</td>)}\r\n          </tr>\r\n        );\r\n      })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default AdminData;\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport './AdminPostCode.css';\r\n\r\nconst AdminPostCode = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  // const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  const onSubmit = (data) => {\r\n    console.log('Data: ', data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className = \"admin__title\"> Check Post Code </p>\r\n      <form className=\"admin-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <table className=\"admin-table\">\r\n          <row>\r\n            <td>\r\n                <label className=\"pc-form__label\">Post Code</label>\r\n                <input className=\"pc-form__input\" name=\"postcodeA\" ref={register({ required: true })}/>\r\n                {errors.postcodeA && <span className=\"pc-form__error\">Required</span>}\r\n            </td>\r\n            <td>\r\n                <label className=\"pc-form__label\">Post Code</label>\r\n                <input className=\"pc-form__input\" name=\"postcodeB\" ref={register({ required: true })}/>\r\n                {errors.postcodeB && <span className=\"pc-form__error\">Required</span>}\r\n\r\n            </td>\r\n          </row>\r\n          <input className=\"pc-form__input\" type=\"submit\" />\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPostCode;\r\n","import { openDB } from 'idb';\r\n\r\nexport const defineDatabase = async (dbName, storeList) => {\r\n  const version = 1;\r\n\r\n  return openDB(dbName, version, {\r\n    upgrade(db) {\r\n      storeList.forEach((storeName) => {\r\n        if (!db.objectStoreNames.contains(storeName)) {\r\n          db.createObjectStore(storeName);\r\n        }\r\n      });\r\n    },\r\n  });\r\n};\r\n\r\nexport const writeDatabase = async (db, storeName, key, value) => {\r\n  const tx = db.transaction(storeName, 'readwrite');\r\n  const store = await tx.objectStore(storeName);\r\n  await store.put(value, key);\r\n  await tx.done;\r\n};\r\n\r\nexport const fetchDatabase = async (db, storeName, key) => {\r\n  const tx = db.transaction(storeName, 'readwrite');\r\n  const store = await tx.objectStore(storeName);\r\n  const value = await store.get(key);\r\n  await tx.done;\r\n  return value;\r\n};\r\n","import React, { useState } from 'react';\r\nimport './AdminCounter.css';\r\n\r\nimport { defineDatabase, writeDatabase, fetchDatabase } from '../AdminUtils/dbUtils.js';\r\n\r\nconst cButton = {\r\n  color: '#d1adf3',\r\n  fontSize: '15px',\r\n  background: '#524e4e',\r\n  width: '70px',\r\n  minHeight: '20px',\r\n};\r\n\r\nconst AdminCounter = () => {\r\n  const [loadDB, setLoadDB] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n\r\n  if (!loadDB) {\r\n    // load stored data from indexDB only once\r\n    setLoadDB(true);\r\n\r\n    (async () => {\r\n      const db = await defineDatabase('letsRecycle', ['sequences']);\r\n      const prevCounter = await fetchDatabase(db, 'sequences', 'counter');\r\n\r\n      if (prevCounter) {\r\n        setCount(prevCounter);\r\n      } else {\r\n        await writeDatabase(db, 'sequences', 'counter', count);\r\n      }\r\n    })();\r\n  }\r\n\r\n  const handleChange = (change) => {\r\n    (async () => {\r\n      let newCount = count + change;\r\n\r\n      if (change === 0) {\r\n        newCount = 0;\r\n      }\r\n\r\n      const db = await defineDatabase('letsRecycle', ['sequences']);\r\n      await writeDatabase(db, 'sequences', 'counter', newCount);\r\n\r\n      setCount(newCount);\r\n    })();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span>\r\n        <button style={cButton} onClick={() => handleChange(-1)}>-</button>\r\n        <button style={cButton} onClick= {() => handleChange(1)}>+</button>\r\n        <button style={cButton} onClick={() => handleChange(0)}>Reset</button>\r\n        <h2> {count} </h2>\r\n      </span>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCounter;\r\n","/* eslint-disable */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makePostCall } from '../AdminUtils/makeAxiosCalls';\r\n\r\nfunction TestPage() {\r\n  useEffect(async () => {\r\n    const request = {\r\n      locationType: 'private property',\r\n      customerName: 'Jane Newman',\r\n      customerEmail: 'aaa@aa.aa',\r\n      itemType: 'washer',\r\n      houseNo: '12',\r\n      street: 'Some St',\r\n      townAddress: 'Sometown',\r\n      postcode: 'sk1 2lg',\r\n      notes: 'lorem ipsum dolor sit amet',\r\n    };\r\n    // request.assignedDate = approvedDate;\r\n    // console.log(request);\r\n\r\n    // save request in the db\r\n\r\n    const refNo = 'D01R07S04T06';\r\n    const url = `https://1t4ggjq9kl.execute-api.eu-west-2.amazonaws.com/prod/api/collect-confirm?refNo=${refNo}`;\r\n    \r\n    const lorem = await makePostCall(url, request);\r\n\r\n    console.log('lorem = ', lorem);\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-column\">\r\n      <h1>Test Page</h1>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestPage;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nimport Header from './components/Header/Header.js';\r\nimport Footer from './components/Footer/Footer.js';\r\nimport Sidebar from './components/Sidebar/Sidebar.js';\r\nimport AdminHeader from './components/AdminHeader/AdminHeader.js';\r\nimport AdminSidebar from './components/AdminSidebar/AdminSidebar.js';\r\nimport PageContentLanding from './components/PageContentLanding/PageContentLanding.js';\r\nimport PageAbout from './components/PageAbout/PageAbout.js';\r\nimport PageManageCollection from './components/PageManageCollection/PageManageCollection.js';\r\nimport AdminDriversList from './components/AdminDriversList/AdminDriversList.js';\r\nimport AdminDepotMap from './components/AdminDepotMap/AdminDepotMap.js';\r\nimport AdminData from './components/AdminData/AdminData.js';\r\nimport AdminPostCode from './components/AdminPostCode/AdminPostCode.js';\r\nimport AdminCounter from './components/AdminCounter/AdminCounter.js';\r\nimport TestPage from './components/FormUtils/TestPage.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <PageContentLanding />\r\n              <Sidebar />\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <Header />\r\n            <div className=\"container\">\r\n                <PageAbout />\r\n              <Sidebar />\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/manage-collection\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <PageManageCollection />\r\n              <Sidebar />\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/test\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <TestPage />\r\n              <Sidebar />\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          {/* admin  */}\r\n          <Route exact path=\"/admin\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                <AdminData />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/drivers-list\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminDriversList />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/map\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminDepotMap />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n\r\n          <Route path=\"/admin/postcode\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminPostCode />\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/counter\">\r\n            <AdminHeader />\r\n            <div className=\"admin-container\">\r\n              <AdminSidebar />\r\n              <div className=\"main-column\">\r\n                < AdminCounter/>\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport reportWebVitals from './reportWebVitals.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}